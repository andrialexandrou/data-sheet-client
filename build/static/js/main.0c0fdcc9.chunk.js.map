{"version":3,"sources":["components/industries.js","components/geoSuggest.js","components/laborStatistics.js","components/unemployment.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Autosuggest","require","GeoSuggest","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getFromServer","inputValue","dataSet","dataset","path","concat","window","location","hostname","Promise","resolve","reject","axios","get","then","response","data","catch","err","onClear","setState","suggestions","onFetch","_","debounce","_ref","value","flatSuggestions","map","obj","area","renderSuggestion","suggestion","react_default","a","createElement","renderSelections","selections","count","sel","key","onKeyDown","event","isEnter","which","isBackspace","selection","state","add","text","id","remove","onChange","_ref2","newValue","type","isDown","isUp","indexOfCurrentSelection","indexOf","valueToBe","isFirstIndex","previousValue","isLastIndex","length","nextValue","inputProps","onBlur","placeholder","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","Component","Toolbar","Selectors","Data","Grid","_this2","requestFromAPI","isForDownload","queryString","filters","query","forEach","filter","filterLabel","filterValue","join","thisQuery","buildQueryString","getSize","getRows","rowGetter","rowIdx","onClearFilters","tags","download","isWaitingForDownload","pleaseHold","alert","handleClick","e","target","offsetParent","className","closeFilters","document","removeEventListener","showFilters","openFilters","addEventListener","findKey","isMeasureType","measureTypes","find","isSeasonalityType","seasonalityEnums","isAreaType","areaTypes","handleChange","checked","name","uniq","index","handleTagDelete","i","_this$state","tag","handleTagAdd","category","_this$state2","DownloadButton","isEmpty","disabled","onClick","isChecked","includes","makeCheckboxes","names","rows","supplemental","note","push","FormButtons","keys","filterName","isLastItem","size","string","style","backgroundColor","color","fontWeight","FilterForm","delimiters","ReactTags","handleDelete","handleAddition","geoSuggest","period","label","_columns","width","_this3","console","log","headers","blob","Blob","link","display","href","URL","createObjectURL","now","Date","getYear","getMonth","getDate","createFilename","click","_rows","lastItem","hasMoreResults","position","left","react_data_grid_default","columns","rowsCount","minHeight","minColumnWidth","toolbar","isSupersector","supersectors","isIndustry","industries","hasValue","replace","trim","resizable","unemployment_Toolbar","App","grid","bind","assertThisInitialized","showGrid","prompt","laborStatistics","unemployment","Boolean","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2EAAAA,EAAOC,QAAU,CACf,yBACA,yBACA,2BACA,6BACA,qCACA,8BACA,mBACA,yDACA,kCACA,uCACA,uBACA,4BACA,yCACA,sCACA,yDACA,4CACA,wBACA,qCACA,6CACA,gDACA,oDACA,uCACA,4BACA,oDACA,0DACA,uCACA,oEACA,0CACA,0CACA,6CACA,yBACA,yBACA,sCACA,0CACA,sEACA,4CACA,qDACA,qDACA,uCACA,6DACA,qBACA,kDACA,6DACA,iFACA,wDACA,mCACA,yEACA,8CACA,mEACA,gDACA,2EACA,yDACA,yDACA,2DACA,6CACA,kDACA,sEACA,oDACA,0DACA,0FACA,wEACA,6CACA,8CACA,kDACA,uCACA,wDACA,6CACA,qDACA,kCACA,uDACA,mFACA,qDACA,wDACA,6CACA,gDACA,6BACA,8BACA,qCACA,2EACA,uCACA,8CACA,qDACA,+CACA,oCACA,sDACA,kCACA,iCACA,yBACA,yCACA,wBACA,iEACA,iCACA,qCACA,iCACA,kCACA,6CACA,+BACA,6CACA,iDACA,mDACA,qDACA,kCACA,wCACA,qDACA,yEACA,sDACA,0CACA,wCACA,gDACA,2BACA,+CACA,mFACA,8DACA,wEACA,mFACA,yFACA,oFACA,mEACA,4DACA,kDACA,wDACA,kEACA,4DACA,6DACA,+DACA,+DACA,wBACA,2CACA,8BACA,uCACA,0DACA,iDACA,4BACA,mCACA,4CACA,uEACA,kDACA,oCACA,0BACA,iCACA,yCACA,2CACA,6BACA,oDACA,2BACA,sDACA,sEACA,gEACA,wCACA,sCACA,6BACA,kFACA,yCACA,wDACA,mCACA,+CACA,8BACA,qDACA,sDACA,qBACA,oEACA,oCACA,0CACA,8BACA,wCACA,+BACA,gCACA,gCACA,oCACA,wCACA,uDACA,sCACA,kDACA,mCACA,iDACA,qDACA,uDACA,sDACA,8CACA,mCACA,mCACA,uBACA,mDACA,iEACA,+BACA,yDACA,+CACA,+CACA,0CACA,6CACA,oDACA,8BACA,0DACA,6CACA,mEACA,0DACA,sCACA,gCACA,iCACA,sGACA,0FACA,8BACA,+CACA,uDACA,qFACA,2EACA,qDACA,gCACA,8EACA,qDACA,8BACA,0CACA,wDACA,2DACA,wEACA,8CACA,uBACA,kCACA,qDACA,6CACA,uCACA,mDACA,iCACA,kCACA,gFACA,8CACA,4DACA,0BACA,0EACA,4DACA,uCACA,wDACA,qEACA,wDACA,+DACA,kEACA,mDACA,oFACA,+CACA,0CACA,uCACA,+BACA,mCACA,qCACA,kCACA,uDACA,+CACA,0DACA,+CACA,kCACA,qDACA,yCACA,gCACA,4CACA,2BACA,4DACA,yCACA,6CACA,2CACA,iCACA,+BACA,iDACA,mCACA,+CACA,qCACA,iDACA,qBACA,kDACA,qDACA,wEACA,mDACA,gEACA,+GACA,iGACA,6CACA,6BACA,0CACA,kEACA,+EACA,8CACA,mCACA,mCACA,+CACA,qEACA,qCACA,4BACA,oEACA,wDACA,+DACA,0DACA,uCACA,+BACA,qDACA,mDACA,2CACA,yBACA,kCACA,oDACA,yBACA,6CACA,iCACA,iDACA,+CACA,oCACA,+DACA,0BACA,kCACA,6CACA,uHACA,+DACA,yCACA,kCACA,4CACA,mCACA,kFACA,mCACA,2CACA,yCACA,0CACA,+EACA,sBACA,8BACA,6BACA,8DACA,uDACA,4GACA,wCACA,iCACA,0DACA,wEACA,+BACA,4BACA,iDACA,gDACA,sCACA,yEACA,4BACA,yBACA,iDACA,2DACA,0BACA,sCACA,+DACA,4CACA,qUCrVIC,EAAcC,EAAQ,KAsIbC,cAnIb,SAAAA,EAAYC,EAAOC,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IAC1BG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAML,EAAOC,KASfQ,cAAgB,SAAAC,GACd,IAAMC,EAAUT,EAAKF,MAAMY,QACrBC,EAAI,UAAAC,OAAcC,OAAOC,SAASC,SAA9B,UAAAH,OAAiDH,EAAjD,iBAAAG,OAA0EJ,G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","file":"static/js/main.0c0fdcc9.chunk.js","sourcesContent":["module.exports = [\n  \"00000000 Total Nonfarm\",\n  \"05000000 Total Private\",\n  \"06000000 Goods Producing\",\n  \"07000000 Service-Providing\",\n  \"08000000 Private Service Providing\",\n  \"10000000 Mining and Logging\",\n  \"10113300 Logging\",\n  \"10210000 Mining, Quarrying, and Oil and Gas Extraction\",\n  \"10211000 Oil and Gas Extraction\",\n  \"10212000 Mining (except Oil and Gas)\",\n  \"10212100 Coal Mining\",\n  \"10212200 Metal Ore Mining\",\n  \"10213000 Support Activities for Mining\",\n  \"10213111 Drilling Oil and Gas Wells\",\n  \"10213112 Support Activities for Oil and Gas Operations\",\n  \"15000000 Mining, Logging and Construction\",\n  \"20000000 Construction\",\n  \"20236000 Construction of Buildings\",\n  \"20236100 Residential Building Construction\",\n  \"20236200 Nonresidential Building Construction\",\n  \"20237000 Heavy and Civil Engineering Construction\",\n  \"20237100 Utility System Construction\",\n  \"20237200 Land Subdivision\",\n  \"20237300 Highway, Street, and Bridge Construction\",\n  \"20237900 Other Heavy and Civil Engineering Construction\",\n  \"20238000 Specialty Trade Contractors\",\n  \"20238100 Foundation, Structure, and Building Exterior Contractors\",\n  \"20238200 Building Equipment Contractors\",\n  \"20238300 Building Finishing Contractors\",\n  \"20238900 Other Specialty Trade Contractors\",\n  \"30000000 Manufacturing\",\n  \"31000000 Durable Goods\",\n  \"31321000 Wood Product Manufacturing\",\n  \"31321100 Sawmills and Wood Preservation\",\n  \"31321200 Veneer, Plywood, and Engineered Wood Product Manufacturing\",\n  \"31321900 Other Wood Product Manufacturing\",\n  \"31327000 Nonmetallic Mineral Product Manufacturing\",\n  \"31327300 Cement and Concrete Product Manufacturing\",\n  \"31331000 Primary Metal Manufacturing\",\n  \"31331100 Iron and Steel Mills and Ferroalloy Manufacturing\",\n  \"31331500 Foundries\",\n  \"31332000 Fabricated Metal Product Manufacturing\",\n  \"31332300 Architectural and Structural Metals Manufacturing\",\n  \"31332700 Machine Shops; Turned Product; and Screw, Nut, and Bolt Manufacturing\",\n  \"31332900 Other Fabricated Metal Product Manufacturing\",\n  \"31333000 Machinery Manufacturing\",\n  \"31333100 Agriculture, Construction, and Mining Machinery Manufacturing\",\n  \"31333200 Industrial Machinery Manufacturing\",\n  \"31333300 Commercial and Service Industry Machinery Manufacturing\",\n  \"31333500 Metalworking Machinery Manufacturing\",\n  \"31333600 Engine, Turbine, and Power Transmission Equipment Manufacturing\",\n  \"31333900 Other General Purpose Machinery Manufacturing\",\n  \"31334000 Computer and Electronic Product Manufacturing\",\n  \"31334100 Computer and Peripheral Equipment Manufacturing\",\n  \"31334111 Electronic Computer Manufacturing\",\n  \"31334200 Communications Equipment Manufacturing\",\n  \"31334400 Semiconductor and Other Electronic Component Manufacturing\",\n  \"31334412 Bare Printed Circuit Board Manufacturing\",\n  \"31334413 Semiconductor and Related Device Manufacturing\",\n  \"31334500 Navigational, Measuring, Electromedical, and Control Instruments Manufacturing\",\n  \"31335000 Electrical Equipment, Appliance, and Component Manufacturing\",\n  \"31335200 Household Appliance Manufacturing\",\n  \"31335300 Electrical Equipment Manufacturing\",\n  \"31336000 Transportation Equipment Manufacturing\",\n  \"31336100 Motor Vehicle Manufacturing\",\n  \"31336200 Motor Vehicle Body and Trailer Manufacturing\",\n  \"31336300 Motor Vehicle Parts Manufacturing\",\n  \"31336400 Aerospace Product and Parts Manufacturing\",\n  \"31336600 Ship and Boat Building\",\n  \"31337000 Furniture and Related Product Manufacturing\",\n  \"31337100 Household and Institutional Furniture and Kitchen Cabinet Manufacturing\",\n  \"31339000 Miscellaneous durable goods manufacturing\",\n  \"31339100 Medical Equipment and Supplies Manufacturing\",\n  \"31339900 Other Miscellaneous Manufacturing\",\n  \"31339910 Jewelry and Silverware Manufacturing\",\n  \"32000000 Non-Durable Goods\",\n  \"32311000 Food Manufacturing\",\n  \"32311200 Grain and Oilseed Milling\",\n  \"32311400 Fruit and Vegetable Preserving and Specialty Food Manufacturing\",\n  \"32311500 Dairy Product Manufacturing\",\n  \"32311600 Animal Slaughtering and Processing\",\n  \"32311700 Seafood Product Preparation and Packaging\",\n  \"32311800 Bakeries and Tortilla Manufacturing\",\n  \"32311900 Other Food Manufacturing\",\n  \"32312000 Beverage and Tobacco Product Manufacturing\",\n  \"32312100 Beverage Manufacturing\",\n  \"32312200 Tobacco Manufacturing\",\n  \"32313000 Textile Mills\",\n  \"32313100 Fiber, Yarn, and Thread Mills\",\n  \"32313200 Fabric Mills\",\n  \"32313300 Textile and Fabric Finishing and Fabric Coating Mills\",\n  \"32314000 Textile Product Mills\",\n  \"32314100 Textile Furnishings Mills\",\n  \"32315000 Apparel Manufacturing\",\n  \"32315100 Apparel Knitting Mills\",\n  \"32315200 Cut and Sew Apparel Manufacturing\",\n  \"32322000 Paper Manufacturing\",\n  \"32322100 Pulp, Paper, and Paperboard Mills\",\n  \"32322200 Converted Paper Product Manufacturing\",\n  \"32323000 Printing and Related Support Activities\",\n  \"32324000 Petroleum and Coal Products Manufacturing\",\n  \"32325000 Chemical Manufacturing\",\n  \"32325100 Basic Chemical Manufacturing\",\n  \"32325400 Pharmaceutical and Medicine Manufacturing\",\n  \"32325600 Soap, Cleaning Compound, and Toilet Preparation Manufacturing\",\n  \"32326000 Plastics and Rubber Products Manufacturing\",\n  \"32326100 Plastics Product Manufacturing\",\n  \"32326200 Rubber Product Manufacturing\",\n  \"40000000 Trade, Transportation, and Utilities\",\n  \"41000000 Wholesale Trade\",\n  \"41423000 Merchant Wholesalers, Durable Goods\",\n  \"41423100 Motor Vehicle and Motor Vehicle Parts and Supplies Merchant Wholesalers\",\n  \"41423200 Furniture and Home Furnishing Merchant Wholesalers\",\n  \"41423300 Lumber and Other Construction Materials Merchant Wholesalers\",\n  \"41423400 Professional and Commercial Equipment and Supplies Merchant Wholesalers\",\n  \"41423600 Household Appliances and Electrical and Electronic Goods Merchant Wholesalers\",\n  \"41423700 Hardware, and Plumbing and Heating Equipment and Supplies Merchant Whole\",\n  \"41423800 Machinery, Equipment, and Supplies Merchant Wholesalers\",\n  \"41423900 Miscellaneous Durable Goods Merchant Wholesalers\",\n  \"41424000 Merchant Wholesalers, Nondurable Goods\",\n  \"41424100 Paper and Paper Product Merchant Wholesalers\",\n  \"41424300 Apparel, Piece Goods, and Notions Merchant Wholesalers\",\n  \"41424400 Grocery and Related Product Merchant Wholesalers\",\n  \"41424600 Chemical and Allied Products Merchant Wholesalers\",\n  \"41424900 Miscellaneous Nondurable Goods Merchant Wholesalers\",\n  \"41425000 Wholesale Electronic Markets and Agents and Brokers\",\n  \"42000000 Retail Trade\",\n  \"42441000 Motor Vehicle and Parts Dealers\",\n  \"42441100 Automobile Dealers\",\n  \"42441200 Other Motor Vehicle Dealers\",\n  \"42441300 Automotive Parts, Accessories, and Tire Stores\",\n  \"42442000 Furniture and Home Furnishings Stores\",\n  \"42442100 Furniture Stores\",\n  \"42442200 Home Furnishings Stores\",\n  \"42443000 Electronics and Appliance Stores\",\n  \"42444000 Building Material and Garden Equipment and Supplies Dealers\",\n  \"42444100 Building Material and Supplies Dealers\",\n  \"42445000 Food and Beverage Stores\",\n  \"42445100 Grocery Stores\",\n  \"42445200 Specialty Food Stores\",\n  \"42445300 Beer, Wine, and Liquor Stores\",\n  \"42446000 Health and Personal Care Stores\",\n  \"42447000 Gasoline Stations\",\n  \"42448000 Clothing and Clothing Accessories Stores\",\n  \"42448100 Clothing Stores\",\n  \"42448300 Jewelry, Luggage, and Leather Goods Stores\",\n  \"42451000 Sporting Goods, Hobby, Musical Instrument, and Book Stores\",\n  \"42451100 Sporting Goods, Hobby, and Musical Instrument Stores\",\n  \"42451200 Book Stores and News Dealers\",\n  \"42452000 General Merchandise Stores\",\n  \"42452200 Department Stores\",\n  \"42452300 General Merchandise Stores, including Warehouse Clubs and Supercenters\",\n  \"42453000 Miscellaneous Store Retailers\",\n  \"42453200 Office Supplies, Stationery, and Gift Stores\",\n  \"42453300 Used Merchandise Stores\",\n  \"42453900 Other Miscellaneous Store Retailers\",\n  \"42454000 Nonstore Retailers\",\n  \"42454100 Electronic Shopping and Mail-Order Houses\",\n  \"43000000 Transportation, Warehousing, and Utilities\",\n  \"43220000 Utilities\",\n  \"43221100 Electric Power Generation, Transmission and Distribution\",\n  \"43221200 Natural Gas Distribution\",\n  \"43400089 Transportation and Warehousing\",\n  \"43481000 Air Transportation\",\n  \"43481100 Scheduled Air Transportation\",\n  \"43482000 Rail Transportation\",\n  \"43483000 Water Transportation\",\n  \"43484000 Truck Transportation\",\n  \"43484100 General Freight Trucking\",\n  \"43484200 Specialized Freight Trucking\",\n  \"43485000 Transit and Ground Passenger Transportation\",\n  \"43485300 Taxi and Limousine Service\",\n  \"43485400 School and Employee Bus Transportation\",\n  \"43486000 Pipeline Transportation\",\n  \"43488000 Support Activities for Transportation\",\n  \"43488100 Support Activities for Air Transportation\",\n  \"43488300 Support Activities for Water Transportation\",\n  \"43488400 Support Activities for Road Transportation\",\n  \"43488500 Freight Transportation Arrangement\",\n  \"43492000 Couriers and Messengers\",\n  \"43493000 Warehousing and Storage\",\n  \"50000000 Information\",\n  \"50511000 Publishing Industries (except Internet)\",\n  \"50511100 Newspaper, Periodical, Book, and Directory Publishers\",\n  \"50511200 Software Publishers\",\n  \"50512000 Motion Picture and Sound Recording Industries\",\n  \"50512100 Motion Picture and Video Industries\",\n  \"50512110 Motion Picture and Video Production\",\n  \"50515000 Broadcasting (except Internet)\",\n  \"50515100 Radio and Television Broadcasting\",\n  \"50515200 Cable and Other Subscription Programming\",\n  \"50517000 Telecommunications\",\n  \"50517300 Wired and Wireless Telecommunications Carriers\",\n  \"50517311 Wired Telecommunications Carriers\",\n  \"50517312 Wireless Telecommunications Carriers (except Satellite)\",\n  \"50518000 Data Processing, Hosting, and Related Services\",\n  \"50519000 Other Information Services\",\n  \"55000000 Financial Activities\",\n  \"55520000 Finance and Insurance\",\n  \"55522000 Credit Intermediation and Related Activities including Monetary Authorities - Central Bank\",\n  \"55522100 Depository Credit Intermediation including Monetary Authorities - Central Bank\",\n  \"55522110 Commercial Banking\",\n  \"55522200 Nondepository Credit Intermediation\",\n  \"55522300 Activities Related to Credit Intermediation\",\n  \"55523000 Financial Investments and Related Activities including Financial Vehicles\",\n  \"55523100 Securities and Commodity Contracts Intermediation and Brokerage\",\n  \"55523110 Investment Banking and Securities Dealing\",\n  \"55523120 Securities Brokerage\",\n  \"55523900 Other Financial Investment Activities including Financial Vehicles\",\n  \"55524000 Insurance Carriers and Related Activities\",\n  \"55524100 Insurance Carriers\",\n  \"55524113 Direct Life Insurance Carriers\",\n  \"55524114 Direct Health and Medical Insurance Carriers\",\n  \"55524126 Direct Property and Casualty Insurance Carriers\",\n  \"55524200 Agencies, Brokerages, and Other Insurance Related Activities\",\n  \"55530000 Real Estate and Rental and Leasing\",\n  \"55531000 Real Estate\",\n  \"55531100 Lessors of Real Estate\",\n  \"55531200 Offices of Real Estate Agents and Brokers\",\n  \"55531300 Activities Related to Real Estate\",\n  \"55532000 Rental and Leasing Services\",\n  \"55532100 Automotive Equipment Rental and Leasing\",\n  \"55532200 Consumer Goods Rental\",\n  \"55532300 General Rental Centers\",\n  \"55532400 Commercial and Industrial Machinery and Equipment Rental and Leasing\",\n  \"60000000 Professional and Business Services\",\n  \"60540000 Professional, Scientific, and Technical Services\",\n  \"60541100 Legal Services\",\n  \"60541200 Accounting, Tax Preparation, Bookkeeping, and Payroll Services\",\n  \"60541300 Architectural, Engineering, and Related Services\",\n  \"60541400 Specialized Design Services\",\n  \"60541500 Computer Systems Design and Related Services\",\n  \"60541600 Management, Scientific, and Technical Consulting Services\",\n  \"60541700 Scientific Research and Development Services\",\n  \"60541800 Advertising, Public Relations, and Related Services\",\n  \"60541900 Other Professional, Scientific, and Technical Services\",\n  \"60550000 Management of Companies and Enterprises\",\n  \"60560000 Administrative and Support and Waste Management and Remediation Services\",\n  \"60561000 Administrative and Support Services\",\n  \"60561100 Office Administrative Services\",\n  \"60561200 Facilities Support Services\",\n  \"60561300 Employment Services\",\n  \"60561320 Temporary Help Services\",\n  \"60561400 Business Support Services\",\n  \"60561420 Telephone Call Centers\",\n  \"60561500 Travel Arrangement and Reservation Services\",\n  \"60561600 Investigation and Security Services\",\n  \"60561610 Investigation, Guard, and Armored Car Services\",\n  \"60561700 Services to Buildings and Dwellings\",\n  \"60561900 Other Support Services\",\n  \"60562000 Waste Management and Remediation Services\",\n  \"65000000 Education and Health Services\",\n  \"65610000 Educational Services\",\n  \"65611100 Elementary and Secondary Schools\",\n  \"65611200 Junior Colleges\",\n  \"65611300 Colleges, Universities, and Professional Schools\",\n  \"65611600 Other Schools and Instruction\",\n  \"65620000 Health Care and Social Assistance\",\n  \"65621000 Ambulatory Health Care Services\",\n  \"65621100 Offices of Physicians\",\n  \"65621200 Offices of Dentists\",\n  \"65621300 Offices of Other Health Practitioners\",\n  \"65621400 Outpatient Care Centers\",\n  \"65621500 Medical and Diagnostic Laboratories\",\n  \"65621600 Home Health Care Services\",\n  \"65621900 Other Ambulatory Health Care Services\",\n  \"65622000 Hospitals\",\n  \"65622100 General Medical and Surgical Hospitals\",\n  \"65622200 Psychiatric and Substance Abuse Hospitals\",\n  \"65622300 Specialty (except Psychiatric and Substance Abuse) Hospitals\",\n  \"65623000 Nursing and Residential Care Facilities\",\n  \"65623100 Nursing Care Facilities (Skilled Nursing Facilities)\",\n  \"65623200 Residential Intellectual and Developmental Disability, Mental Health and Substance Abuse Facilities\",\n  \"65623300 Continuing Care Retirement Communities and Assisted Living Facilities for the Elderly\",\n  \"65623900 Other Residential Care Facilities\",\n  \"65624000 Social Assistance\",\n  \"65624100 Individual and Family Services\",\n  \"65624120 Services for the Elderly and Persons with Disabilities\",\n  \"65624200 Community Food and Housing, and Emergency and Other Relief Services\",\n  \"65624300 Vocational Rehabilitation Services\",\n  \"65624400 Child Day Care Services\",\n  \"70000000 Leisure and Hospitality\",\n  \"70710000 Arts, Entertainment, and Recreation\",\n  \"70711000 Performing Arts, Spectator Sports, and Related Industries\",\n  \"70711100 Performing Arts Companies\",\n  \"70711200 Spectator Sports\",\n  \"70711300 Promoters of Performing Arts, Sports, and Similar Events\",\n  \"70711500 Independent Artists, Writers, and Performers\",\n  \"70712000 Museums, Historical Sites, and Similar Institutions\",\n  \"70713000 Amusement, Gambling, and Recreation Industries\",\n  \"70713100 Amusement Parks and Arcades\",\n  \"70713200 Gambling Industries\",\n  \"70713900 Other Amusement and Recreation Industries\",\n  \"70713940 Fitness and Recreational Sports Centers\",\n  \"70720000 Accommodation and Food Services\",\n  \"70721000 Accommodation\",\n  \"70721100 Traveler Accommodation\",\n  \"70721110 Hotels (except Casino Hotels) and Motels\",\n  \"70721120 Casino Hotels\",\n  \"70722000 Food Services and Drinking Places\",\n  \"70722300 Special Food Services\",\n  \"70722400 Drinking Places (Alcoholic Beverages)\",\n  \"70722500 Restaurants and Other Eating Places\",\n  \"70722511 Full-Service Restaurants\",\n  \"70722590 Limited-Service Restaurants and Other Eating Places\",\n  \"80000000 Other Services\",\n  \"80811000 Repair and Maintenance\",\n  \"80811100 Automotive Repair and Maintenance\",\n  \"80811300 Commercial and Industrial Machinery and Equipment (except Automotive and Electronic) Repair and Maintenance\",\n  \"80811400 Personal and Household Goods Repair and Maintenance\",\n  \"80812000 Personal and Laundry Services\",\n  \"80812100 Personal Care Services\",\n  \"80812300 Drycleaning and Laundry Services\",\n  \"80812900 Other Personal Services\",\n  \"80813000 Religious, Grantmaking, Civic, Professional, and Similar Organizations\",\n  \"80813100 Religious Organizations\",\n  \"80813200 Grantmaking and Giving Services\",\n  \"80813300 Social Advocacy Organizations\",\n  \"80813400 Civic and Social Organizations\",\n  \"80813900 Business, Professional, Labor, Political, and Similar Organizations\",\n  \"90000000 Government\",\n  \"90910000 Federal Government\",\n  \"90912811 National Security\",\n  \"90912991 Federal Government excluding Department of Defense\",\n  \"90912993 Federal Government excluding Postal Service\",\n  \"90912994 Federal Government excluding Postal Service, Department of Defense, Ship Building, and Hospitals\",\n  \"90916220 Federal Government Hospitals\",\n  \"90919110 Department of Defense\",\n  \"90919118 Department of Defense, including Ship Building\",\n  \"90919119 Department of Defense, including Ship Building and Hospitals\",\n  \"90919120 U.S. Postal Service\",\n  \"90920000 State Government\",\n  \"90921611 State Government Educational Services\",\n  \"90922000 State Government Excluding Education\",\n  \"90922622 State Government Hospitals\",\n  \"90922991 State Government excluding Educational Services and Hospitals\",\n  \"90930000 Local Government\",\n  \"90931150 Indian Tribes\",\n  \"90931611 Local Government Educational Services\",\n  \"90932000 Local Government excluding Educational Services\",\n  \"90932480 Transportation\",\n  \"90932622 Local Government Hospitals\",\n  \"90936111 Local Government Elementary and Secondary Education\",\n  \"90940000 Total State and Local Government\",\n  \"90940001 District of Columbia Government\"\n]","import React, { Component } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nconst Autosuggest = require('react-autosuggest');\n\nclass GeoSuggest extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      value: \"\",\n      suggestions: [],\n      selections: []\n    }\n  }\n\n  getFromServer = inputValue => {\n    const dataSet = this.props.dataset;\n    const path = `http://${ window.location.hostname }:4000/${ dataSet }/suggest?geo=${ inputValue }`;\n\n    return new Promise( (resolve, reject) => {\n      axios.get( path )\n        .then( response => {\n          resolve(response.data);\n        } )\n        .catch( err => {\n          reject(err);\n        } );\n\n    });\n  }\n\n  onClear = () => {\n    this.setState({\n      suggestions: []\n    })\n  }\n\n  onFetch = _.debounce( ({ value }) => {\n    this.getFromServer( value )\n      .then( suggestions => {\n        const flatSuggestions = suggestions.map(obj => obj.area);\n        this.setState({\n          suggestions: flatSuggestions\n        })\n      });\n  }, 500 );\n\n  renderSuggestion = ( suggestion ) => {\n    return <div>{ suggestion }</div>\n  }\n\n  renderSelections = ( selections ) => {\n    var count = 0;\n    return (\n      <div>\n      {\n        selections.map( sel => {\n          count++;\n          return <div key={count}>{ sel }</div>;\n        })\n      }\n      </div>\n    );\n  }\n\n  onKeyDown = (event) => {\n    const isEnter = event.which === 13;\n    const isBackspace = event.which === 8;\n\n    if ( isEnter ) {\n      const selection = this.state.value;\n      this.props.add({text: selection, id: selection}, 'area');\n      this.setState({value: ''});\n    }\n    if ( isBackspace ) {\n      this.props.remove('last', 'area');\n    }\n  }\n\n  onChange = (event, { newValue }) => {\n    if (event.type === 'change' ) {\n      this.setState({\n        value: newValue\n      });\n    }\n    if ( event.type === 'keydown' ) {\n      const isDown = event.which === 40;\n      const isUp = event.which === 38;\n\n      const indexOfCurrentSelection = this.state.suggestions.indexOf( this.state.value );\n\n      let valueToBe = this.state.value;\n      if ( isUp ) {\n        const isFirstIndex = indexOfCurrentSelection === 0;\n        const previousValue = this.state.suggestions[ indexOfCurrentSelection - 1 ];\n        valueToBe = isFirstIndex ? this.state.value : previousValue;\n      }\n      if ( isDown ) {\n        const isLastIndex = indexOfCurrentSelection + 1 === this.state.suggestions.length;\n        const nextValue = this.state.suggestions[ indexOfCurrentSelection + 1 ];\n        valueToBe = isLastIndex ? this.state.value : nextValue;\n      }\n\n      this.setState({\n        value: valueToBe\n      })\n    }\n  }\n\n  render() {\n    const suggestions = this.state.suggestions;\n\n    const inputProps = {\n      value: this.state.value,\n      onChange: this.onChange,\n      onKeyDown: this.onKeyDown,\n      onBlur: () => {},\n      type: 'search',\n      placeholder: 'location'\n    };\n\n    return (\n      <div>\n        { this.renderSelections( this.state.selections ) }\n        <Autosuggest\n          suggestions={ suggestions }\n          onSuggestionsFetchRequested={ this.onFetch }\n          onSuggestionsClearRequested={ this.onClear }\n          getSuggestionValue={ this.getFromServer }\n          renderSuggestion={ this.renderSuggestion }\n          inputProps={ inputProps } />\n      </div>\n    );\n  }\n}\n\nexport default GeoSuggest;\n","import React, { Component } from 'react';\nimport ReactDataGrid from 'react-data-grid';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nimport GeoSuggest from './geoSuggest';\n\nconst {\n  Toolbar,\n  Data: { Selectors }\n} = require('react-data-grid-addons');\n\nfunction buildQueryString( filters ) {\n  let query = '?';\n  _.forEach(filters, (filter, key) => {\n    var filterLabel = key;\n    var filterValue = filter.join('|');\n    const thisQuery = `${ filterLabel }=${ filterValue }&`;\n    query += thisQuery;\n  });\n  return query;\n}\n\nfunction createFilename() {\n  const now = new Date();\n  const filename = `LAUS_${ 1900 + now.getYear() }-${ now.getMonth() }-${ now.getDate() }.csv`;\n  return filename;\n}\n\nclass Grid extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this._columns = [\n      {\n        key: 'survey_name',\n        name: 'Survey Name',\n        width: 160\n      },\n      {\n        key: 'series_title',\n        name: 'Series Title',\n        width: 160\n      },\n      {\n        key: 'series_id',\n        name: 'Series ID',\n        width: 200\n      },\n      {\n        key: 'period',\n        name: 'Period',\n        width: 150\n      },\n      {\n        key: 'label',\n        name: 'Label',\n        width: 150\n      },\n      {\n        key: 'seasonality_enum',\n        name: 'Seasonality',\n        width: 100\n      },\n      {\n        key: 'area',\n        name: 'Area',\n        width: 350\n      },\n      {\n        key: 'area_type',\n        name: 'Area Type',\n        width: 160\n      },\n      {\n        key: 'measure_type',\n        name: 'Measure Type',\n        width: 160\n      },\n      {\n        key: 'value',\n        name: 'Value',\n        width: 200\n      }\n    ];\n\n    this.seasonalityEnums = [ {\n      key: 'S',\n      note: '(seasonally adjusted)'\n    }, {\n      key: 'U',\n      note: '(not adjusted)'\n    }];\n    this.areaTypes = [\n      'National',\n      'Statewide',\n      'Metropolitan areas',\n      'Metropolitan divisions',\n      'Micropolitan areas',\n      'Combined areas',\n      'Counties and equivalents',\n      'Cities and towns above 25,000 population',\n      'Cities and towns below 25,000 population in New England',\n      'Parts of cities that cross county boundaries',\n      'Multi-entity small labor market areas',\n      'Intrastate parts of interstate areas',\n      'Balance of state areas',\n      'Census regions',\n      'Census divisions'\n    ];\n    this.measureTypes = [\n      'Unemployment Rate',\n      'Unemployment',\n      'Employment',\n      'Labor Force'\n    ];\n\n    this.state = {\n      showFilters: false,\n      rows: [],\n      filters: {},\n      tags: {}\n    };\n  }\n\n  getFromServer( query, isForDownload ) {\n    let path = `http://${ window.location.hostname }:4000/laus`;\n    if ( isForDownload ) {\n      path += '/download'\n    }\n    if ( query ) {\n      path += query;\n    }\n    console.log('path', path)\n    if ( isForDownload ) return;\n    axios.get( path )\n      .then( response => {\n        if ( isForDownload ) {\n          var headers = response.headers;\n          var blob = new Blob([response.data],{type:headers['content-type']});\n          var link = document.createElement('a');\n          link.style.display = 'none';\n          link.href = window.URL.createObjectURL(blob);\n          link.download = createFilename();\n          link.click();\n          this.setState({isWaitingForDownload: false})\n        } else {\n          this._rows = response.data;\n          const lastItem = response.data[response.data.length - 1];\n          if ( lastItem && lastItem.hasMoreResults ) {\n\n          }\n          this.setState({rows: this._rows});\n        }\n      })\n      .catch( err => {\n        console.log('Resource not available.\\n', err);\n      })\n  }\n\n  componentWillMount() {\n    this.getFromServer();\n  }\n\n  requestFromAPI = ( isForDownload ) => {\n    const queryString = buildQueryString( this.state.filters );\n    this.getFromServer( queryString, isForDownload );\n  }\n\n  getSize = () => {\n    return this.getRows().length;\n  };\n\n  getRows = () => {\n    return Selectors.getRows(this.state);\n  };\n\n  rowGetter = (rowIdx) => {\n    let rows = this.getRows();\n    return rows[rowIdx];\n  };\n\n  onClearFilters = () => {\n    // all filters removed\n    this.setState({\n      filters: {},\n      tags: {}\n    }, this.requestFromAPI);\n  };\n\n  download = () => {\n    this.setState({isWaitingForDownload:true});\n    this.requestFromAPI( true );\n  };\n\n  pleaseHold = () => {\n    alert('Still in development! Come back in a few days?')\n  };\n\n  handleClick = e => {\n    // return;\n    const isInside = e.target.offsetParent && e.target.offsetParent.className === 'filter-pane'\n    if ( isInside ) {\n      return;\n    }\n    this.closeFilters();\n  };\n\n  closeFilters = () => {\n    document.removeEventListener('mousedown', this.handleClick, false);\n    this.setState({\n      showFilters: false\n    })\n  };\n\n  openFilters = () => {\n    document.addEventListener('mousedown', this.handleClick, false);\n    this.setState({\n      showFilters: true\n    });\n  };\n\n  findKey = ( value ) => {\n    let key = \"\";\n\n    const isMeasureType = this.measureTypes.find( type => type === value );\n    const isSeasonalityType = this.seasonalityEnums.find( type => type.key === value );\n    const isAreaType = this.areaTypes.find( type => type === value );\n    if ( isMeasureType ) {\n      key = \"measure_type\";\n    } else if ( isSeasonalityType ) {\n      key = \"seasonality_enum\";\n    } else if ( isAreaType ) {\n      key = \"area_type\"\n    }\n    return key;\n  }\n\n  handleChange = event => {\n    const { filters } = this.state;\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    if ( target.type === \"checkbox\" ) {\n      const key = this.findKey( name );\n\n      if ( value ) {\n        // being checked\n        filters[ key ] = _.uniq( ( filters[ key ] || [] ).concat( name ) );\n      } else {\n        // being unchecked\n        filters[ key ] = _.uniq( filters[ key ].filter( index => index !== name ) );\n        if ( filters[ key ].length === 0 ) {\n          // to disable the download button.\n          delete filters[ key ];\n        }\n      }\n    }\n\n    this.setState({\n      filters: filters\n    });\n  }\n\n  handleTagDelete = (i, key) => {\n    if ( !this.state.tags.area || this.state.tags.area.length === 0 ) {\n      return;\n    }\n\n    if ( i === 'last' && key === 'area' ) {\n      i = this.state.tags.area.length - 1;\n    }\n    const { filters, tags } = this.state;\n    if ( !filters[ key ] ) {\n      return;\n    }\n    filters[ key ] = filters[key].filter((tag, index) => index !== i);\n    if ( filters[ key ].length === 0 ) {\n      // to disable the download button.\n      delete filters[ key ];\n    }\n    tags[ key ] = tags[key].filter((tag, index) => index !== i);\n    this.setState({\n      filters: filters,\n      tags: tags\n    });\n  };\n\n  handleTagAdd = (tag, category) => {\n    const { filters, tags } = this.state;\n    filters[ category ] = ( filters[ category ] || [] ).concat( tag.text );\n    tags[ category ] = ( tags[ category ] || [] ).concat( tag );\n    this.setState({\n      filters: filters,\n      tags: tags\n    });\n  };\n\n  DownloadButton = () => {\n    if ( _.isEmpty( this.state.filters ) ) {\n      return (\n        <button disabled>\n          Select some stuff below and then you can download.\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={ this.download }>\n          Download current view.\n        </button>\n      );\n    }\n  }\n\n  isChecked = (key, name) => {\n    return this.state.filters[key] &&\n      this.state.filters[key].includes(name);\n  }\n\n  makeCheckboxes = (key, names) => {\n    const rows = [];\n    let count = 0;\n    names.forEach( value => {\n      let name = '';\n      let supplemental = '';\n\n      if ( typeof value == 'object' ) {\n        name = value.key;\n        supplemental = value.note;\n      } else {\n        name = value;\n      }\n\n      rows.push(<div key={ count }>\n          <label>\n          <input\n            name={ name }\n            type=\"checkbox\"\n            checked={this.isChecked( key, name )}\n            onChange={this.handleChange} />\n            &nbsp;{ name } { supplemental }\n        </label>\n      </div>);\n      count++\n    } );\n\n    return <div>{ rows }</div>\n  }\n\n  FormButtons = () => {\n    return (\n      <div>\n        <div>\n          Meets criteria:\n          <ul>\n            {\n              Object.keys( this.state.filters ).map( (filterName, i) => {\n                const isLastItem = i + 1 === _.size( this.state.filters );\n                const filter = this.state.filters[ filterName ];\n                let string = filter.join(' OR ');\n                if ( !isLastItem ) {\n                  string += ' AND'\n                }\n                return (\n                  <li key={ i }>{ string }</li>\n                )\n              })\n            }\n          </ul>\n          <div className=\"flex-container\">\n            <div className=\"flex-column\">\n              <button\n                style={{\n                  backgroundColor: 'green',\n                  color: 'white',\n                  fontWeight: '800'\n                }}\n                onClick={ () => this.requestFromAPI( false )}>\n                Preview Results\n              </button>\n            </div>\n            <div className=\"flex-column\">\n              <button\n                onClick={this.onClearFilters}>\n                Clear Filters\n              </button>\n            </div>\n            <div className=\"flex-column\">\n              <this.DownloadButton className=\"flex-column\" />\n            </div>\n          </div>\n          {\n            this.state.isWaitingForDownload ?\n              <div style={{color: 'green'}}>&nbsp;Waiting for download...</div> :\n              null\n          }\n        </div>\n      </div>\n    )\n  }\n\n  FilterForm = () => {\n    const KeyCodes = {\n      comma: 188, // some of the values include commas. therefore, exclude\n      enter: 13,\n      tab: 9\n    };\n\n    const delimiters = [KeyCodes.tab, KeyCodes.enter];\n\n    return (\n      <div className=\"filter-pane\">\n        <form>\n          <div className=\"disclaimer\">\n            At the moment, text values inserted here must match upper/lowercase and punctuation of the target search field.\n          </div>\n          <div className=\"flex-container\">\n            <label\n              className=\"flex-column hide-input\">\n              <b>Area</b>\n              <div>\n                <ReactTags\n                  tags={this.state.tags.area}\n                  handleDelete={() => {}}\n                  handleAddition={() => {}}\n                  delimiters={delimiters} />\n                <GeoSuggest\n                  dataset=\"laus\"\n                  add={ this.handleTagAdd }\n                  remove={ this.handleTagDelete }/>\n              </div>\n            </label>\n            <label className=\"flex-column\">\n              <b>Period</b>\n              <div>\n                <ReactTags\n                  tags={this.state.tags.period}\n                  handleDelete={e => this.handleTagDelete(e, 'period')}\n                  handleAddition={e => this.handleTagAdd(e, 'period')}\n                  delimiters={delimiters} />\n              </div>\n            </label>\n            <label className=\"flex-column\">\n              <b>Label</b>\n              <div>\n                <ReactTags\n                  tags={this.state.tags.label}\n                  handleDelete={e => this.handleTagDelete(e, 'label')}\n                  handleAddition={e => this.handleTagAdd(e, 'label')}\n                  delimiters={delimiters} />\n              </div>\n            </label>\n          </div>\n          <div className=\"flex-container\">\n            <section className=\"flex-column\">\n              <b>Area Types</b>\n              { this.makeCheckboxes( 'area_type', this.areaTypes ) }\n            </section>\n            <section className=\"flex-column\">\n              <b>Measure Types</b>\n              { this.makeCheckboxes( 'measure_type', this.measureTypes ) }\n            </section>\n            <section className=\"flex-column\">\n              <b>Seasonality</b>\n              { this.makeCheckboxes( 'seasonality_enum', this.seasonalityEnums ) }\n            </section>\n          </div>\n        </form>\n        <this.FormButtons />\n      </div>\n    );\n  }\n\n  render() {\n    if ( this._rows ) {\n      return  (\n        <div>\n          <this.FilterForm />\n          <div style={{\n            position: 'absolute',\n            left: '0',\n            width: '100%'\n            }}>\n            <ReactDataGrid\n              columns={this._columns}\n              rowGetter={this.rowGetter}\n              rowsCount={this.getSize()}\n              minHeight={600}\n              minColumnWidth={120}\n              toolbar={<Toolbar />}\n              />\n            <div className=\"disclaimer\">\n              Data above is only the first 100 rows. If you choose to download your current filter, it will provide the full dataset as stored in the database.\n            </div>\n\n          </div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Grid;\n","import React, { Component } from 'react';\nimport ReactDataGrid from 'react-data-grid';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nimport GeoSuggest from './geoSuggest';\nimport industries from './industries';\n\nconst {\n  Toolbar,\n  Data: { Selectors }\n} = require('react-data-grid-addons');\n\nfunction buildQueryString( filters ) {\n  let query = '?';\n  _.forEach(filters, (filter, key) => {\n    var filterLabel = key;\n    var filterValue = filter.join('|');\n    const thisQuery = `${ filterLabel }=${ filterValue }&`;\n    query += thisQuery;\n  });\n  return query;\n}\n\nfunction createFilename() {\n  const now = new Date();\n  const filename = `EMPLOYMENT_${ 1900 + now.getYear() }-${ now.getMonth() }-${ now.getDate() }.csv`;\n  return filename;\n}\n\nclass Grid extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this._columns = [\n      {\n        key: 'survey_name',\n        name: 'Survey Name',\n        width: 160,\n        resizable: true\n      },\n      {\n        key: 'series_title',\n        name: 'Series Title',\n        width: 160\n      },\n      {\n        key: 'series_id',\n        name: 'Series ID',\n        width: 200\n      },\n      {\n        key: 'period',\n        name: 'Period',\n        width: 150\n      },\n      {\n        key: 'label',\n        name: 'Label',\n        width: 150\n      },\n      {\n        key: 'seasonality_enum',\n        name: 'Seasonality',\n        width: 100\n      },\n      {\n        key: 'state',\n        name: 'State',\n        width: 160\n      },\n      {\n        key: 'area_type',\n        name: 'Area Type',\n        width: 350\n      },\n      {\n        key: 'employment_type',\n        name: 'Employment Type',\n        width: 160\n      },\n      {\n        key: 'supersector',\n        name: 'Supersector',\n        width: 160\n      },\n      {\n        key: 'industry',\n        name: 'Industry',\n        width: 160\n      },\n      {\n        key: 'value',\n        name: 'Value',\n        width: 200\n      }\n    ];\n\n    this.seasonalityEnums = [ {\n      key: 'S',\n      note: '(seasonally adjusted)'\n    }, {\n      key: 'U',\n      note: '(not adjusted)'\n    }];\n    this.supersectors = [\n      'Total Nonfarm',\n      'Total Private',\n      'Goods Producing',\n      'Service-Providing',\n      'Private Service Providing',\n      'Mining and Logging',\n      'Mining, Logging, and Construction',\n      'Construction',\n      'Manufacturing',\n      'Durable Goods',\n      'Non-Durable Goods',\n      'Trade, Transportation, and Utilities',\n      'Wholesale Trade',\n      'Retail Trade',\n      'Transportation and Utilities',\n      'Information',\n      'Financial Activities',\n      'Professional and Business Services',\n      'Education and Health Services',\n      'Leisure and Hospitality',\n      'Other Services',\n      'Government'    ];\n    this.industries = industries;\n\n    this.state = {\n      showFilters: false,\n      rows: [],\n      filters: {},\n      tags: {}\n    };\n  }\n\n  getFromServer( query, isForDownload ) {\n    let path = `http://${ window.location.hostname }:4000/employ`;\n    if ( isForDownload ) {\n      path += '/download'\n    }\n    if ( query ) {\n      path += query;\n    }\n    console.log('path', path);\n    if ( isForDownload ) return;\n    axios.get( path )\n      .then( response => {\n        if ( isForDownload ) {\n          var headers = response.headers;\n          var blob = new Blob([response.data],{type:headers['content-type']});\n          var link = document.createElement('a');\n          link.style.display = 'none';\n          link.href = window.URL.createObjectURL(blob);\n          link.download = createFilename();\n          link.click();\n          this.setState({isWaitingForDownload: false})\n        } else {\n          this._rows = response.data;\n          const lastItem = response.data[response.data.length - 1];\n          if ( lastItem && lastItem.hasMoreResults ) {\n\n          }\n          this.setState({rows: this._rows});\n        }\n      })\n      .catch( err => {\n        console.log('Resource not available.\\n', err);\n      })\n  }\n\n  componentWillMount() {\n    this.getFromServer();\n  }\n\n  requestFromAPI = ( isForDownload ) => {\n    const queryString = buildQueryString( this.state.filters );\n    this.getFromServer( queryString, isForDownload );\n  }\n\n  getSize = () => {\n    return this.getRows().length;\n  };\n\n  getRows = () => {\n    return Selectors.getRows(this.state);\n  };\n\n  rowGetter = (rowIdx) => {\n    let rows = this.getRows();\n    return rows[rowIdx];\n  };\n\n  onClearFilters = () => {\n    // all filters removed\n    this.setState({\n      filters: {},\n      tags: {}\n    }, this.requestFromAPI);\n  };\n\n  download = () => {\n    this.setState({isWaitingForDownload:true});\n    this.requestFromAPI( true );\n  };\n\n  pleaseHold = () => {\n    alert('Still in development! Come back in a few days?')\n  };\n\n  handleClick = e => {\n    // return;\n    const isInside = e.target.offsetParent && e.target.offsetParent.className === 'filter-pane'\n    if ( isInside ) {\n      return;\n    }\n    this.closeFilters();\n  };\n\n  closeFilters = () => {\n    document.removeEventListener('mousedown', this.handleClick, false);\n    this.setState({\n      showFilters: false\n    })\n  };\n\n  openFilters = () => {\n    document.addEventListener('mousedown', this.handleClick, false);\n    this.setState({\n      showFilters: true\n    });\n  };\n\n  findKey = ( value ) => {\n    let key = \"\";\n\n    const isSupersector = this.supersectors.find( type => type === value );\n    const isSeasonalityType = this.seasonalityEnums.find( type => type.key === value );\n    const isIndustry = this.industries.find( type => type === value );\n    if ( isSupersector ) {\n      key = \"supersector_type\";\n    } else if ( isSeasonalityType ) {\n      key = \"seasonality_enum\";\n    } else if ( isIndustry ) {\n      key = \"industry_type\"\n    }\n    return key;\n  }\n\n  handleChange = event => {\n    const { filters } = this.state;\n    const target = event.target;\n    const hasValue = target.type === 'checkbox' ? target.checked : target.value;\n    let name = target.name;\n\n    if ( target.type === \"checkbox\" ) {\n      const key = this.findKey( name );\n      if ( key === \"industry_type\" ) {\n        name = name.replace(/\\d+/g, '' ).trim()\n      }\n      if ( hasValue ) {\n        // being checked\n        filters[ key ] = _.uniq( ( filters[ key ] || [] ).concat( name ) );\n      } else {\n        // being unchecked\n        filters[ key ] = _.uniq( filters[ key ].filter( index => index !== name ) );\n        if ( filters[ key ].length === 0 ) {\n          // to disable the download button.\n          delete filters[ key ];\n        }\n      }\n    }\n\n    this.setState({\n      filters: filters\n    });\n  }\n\n  handleTagDelete = (i, key) => {\n    if ( i === 'last' && key === 'area' ) {\n      i = this.state.tags.area && this.state.tags.area.length - 1;\n      if ( !i ) {\n        return;\n      }\n    }\n    const { filters, tags } = this.state;\n    if ( !filters[ key ] ) {\n      return;\n    }\n    filters[ key ] = filters[key].filter((tag, index) => index !== i);\n    if ( filters[ key ].length === 0 ) {\n      // to disable the download button.\n      delete filters[ key ];\n    }\n    tags[ key ] = tags[key].filter((tag, index) => index !== i);\n    this.setState({\n      filters: filters,\n      tags: tags\n    });\n  };\n\n  handleTagAdd = (tag, category) => {\n    const { filters, tags } = this.state;\n    filters[ category ] = ( filters[ category ] || [] ).concat( tag.text );\n    tags[ category ] = ( tags[ category ] || [] ).concat( tag );\n    this.setState({\n      filters: filters,\n      tags: tags\n    });\n  };\n\n  DownloadButton = () => {\n    if (this._rows && this._rows.length === 0) {\n      return (\n        <button disabled>\n          Unable to download current view.\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={ this.download }>\n          Download current view.\n        </button>\n      );\n    }\n  }\n\n  isChecked = (key, name) => {\n    return this.state.filters[key] &&\n      this.state.filters[key].includes(name);\n  }\n\n  makeCheckboxes = (key, names) => {\n    const rows = [];\n    let count = 0;\n    names.forEach( value => {\n      let name = '';\n      let supplemental = '';\n\n      if ( typeof value == 'object' ) {\n        name = value.key;\n        supplemental = value.note;\n      } else {\n        name = value;\n      }\n\n      rows.push(<div key={ count }>\n          <label>\n          <input\n            name={ name }\n            type=\"checkbox\"\n            checked={this.isChecked( key, name )}\n            onChange={this.handleChange} />\n            &nbsp;{ name } { supplemental }\n        </label>\n      </div>);\n      count++\n    } );\n\n    return <div>{ rows }</div>\n  }\n\n  FormButtons = () => {\n    return (\n      <div>\n        <div>\n          Meets criteria:\n          <ul>\n            {\n              Object.keys( this.state.filters ).map( (filterName, i) => {\n                const isLastItem = i + 1 === _.size( this.state.filters );\n                const filter = this.state.filters[ filterName ];\n                let string = filter.join(' OR ');\n                if ( !isLastItem ) {\n                  string += ' AND'\n                }\n                return (\n                  <li key={ i }>{ string }</li>\n                )\n              })\n            }\n          </ul>\n          <div className=\"flex-container\">\n            <div className=\"flex-column\">\n              <button\n                style={{\n                  backgroundColor: 'green',\n                  color: 'white',\n                  fontWeight: '800'\n                }}\n                onClick={ () => this.requestFromAPI( false )}>\n                Preview Results\n              </button>\n            </div>\n            <div className=\"flex-column\">\n              <button\n                onClick={this.onClearFilters}>\n                Clear Filters\n              </button>\n            </div>\n            <div className=\"flex-column\">\n              <this.DownloadButton />\n            </div>\n            {\n              this.state.isWaitingForDownload ?\n              <div style={{color: 'green'}}>&nbsp;Waiting for download...</div> :\n              null\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  FilterForm = () => {\n    const KeyCodes = {\n      comma: 188, // some of the values include commas. therefore, exclude\n      enter: 13,\n      tab: 9\n    };\n\n    const delimiters = [KeyCodes.tab, KeyCodes.enter];\n\n    return (\n      <div className=\"filter-pane\">\n        <form>\n          <div className=\"disclaimer\">\n            At the moment, text values inserted here must match upper/lowercase and punctuation of the target search field.\n          </div>\n          <div className=\"flex-container\">\n            <section className=\"flex-column\">\n              <label>\n                <b>State</b>\n                <div>\n                  <ReactTags\n                    tags={this.state.tags.state}\n                    handleDelete={e => this.handleTagDelete(e, 'state')}\n                    handleAddition={e => this.handleTagAdd(e, 'state')}\n                    delimiters={delimiters} />\n                </div>\n              </label>\n            </section>\n            <section className=\"flex-column\">\n              <label>\n                <b>Period</b>\n                <div>\n                  <ReactTags\n                    tags={this.state.tags.period}\n                    handleDelete={e => this.handleTagDelete(e, 'period')}\n                    handleAddition={e => this.handleTagAdd(e, 'period')}\n                    delimiters={delimiters} />\n                </div>\n              </label>\n            </section>\n            <section className=\"flex-column\">\n              <label>\n                <b>Label</b>\n                <div>\n                  <ReactTags\n                    tags={this.state.tags.label}\n                    handleDelete={e => this.handleTagDelete(e, 'label')}\n                    handleAddition={e => this.handleTagAdd(e, 'label')}\n                    delimiters={delimiters} />\n                </div>\n              </label>\n            </section>\n          </div>\n          <div className=\"flex-container\">\n          <section className=\"flex-column\">\n            <b>Seasonality</b>\n            { this.makeCheckboxes( 'seasonality_enum', this.seasonalityEnums ) }\n            <b>Supersectors</b>\n            { this.makeCheckboxes( 'supersector', this.supersectors ) }\n          </section>\n          <section className=\"flex-column\">\n            <b>Industries</b>\n            <div className=\"industries-scrollbox\">\n              { this.makeCheckboxes( 'industry', this.industries ) }\n            </div>\n          </section>\n          </div>\n        </form>\n        <this.FormButtons />\n      </div>\n    );\n  }\n\n  render() {\n    if ( this._rows ) {\n      return  (\n        <div>\n          <this.FilterForm />\n          <div style={{\n            position: 'absolute',\n            left: '0',\n            width: '100%'\n            }}>\n            <ReactDataGrid\n              columns={this._columns}\n              rowGetter={this.rowGetter}\n              rowsCount={this.getSize()}\n              minHeight={600}\n              minColumnWidth={120}\n              toolbar={<Toolbar />}\n              />\n            <div className=\"disclaimer\">\n              Data above is only the first 100 rows. If you choose to download your current filter, it will provide the full dataset as stored in the database.\n            </div>\n\n          </div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Grid;\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport LaborGrid from \"./components/laborStatistics\";\nimport UnemploymentGrid from \"./components/unemployment\";\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = {\n      grid: 'labor'\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.showGrid = this.showGrid.bind(this);\n  }\n\n  handleClick( prompt ) {\n    this.setState({\n      grid: prompt\n    })\n  }\n\n  showGrid() {\n    if ( this.state.grid === 'labor' ) {\n      return <LaborGrid />\n    } else if ( this.state.grid === 'unemployment' ) {\n      return <UnemploymentGrid />\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <button \n          onClick={() => this.handleClick('labor')}\n          className={ this.state.grid === 'labor' && 'current' } >\n          National and Local Labor Force Statistics\n        </button>\n        <button \n          onClick={() => this.handleClick('unemployment')}\n          className={this.state.grid === 'unemployment' && 'current' } >\n          Current Employment\n        </button>\n        { this.showGrid() }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}