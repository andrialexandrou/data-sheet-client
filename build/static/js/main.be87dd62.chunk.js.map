{"version":3,"sources":["components/industries.js","components/geoSuggest.js","components/laborStatistics.js","components/unemployment.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Autosuggest","require","GeoSuggest","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getFromServer","inputValue","dataSet","dataset","path","concat","window","location","hostname","Promise","resolve","reject","axios","get","then","response","data","catch","err","onClear","setState","suggestions","onFetch","_","debounce","_ref","value","flatSuggestions","map","obj","area","renderSuggestion","suggestion","react_default","a","createElement","renderSelections","selections","count","sel","key","onKeyDown","event","isEnter","which","isBackspace","selection","state","add","text","id","remove","onChange","_ref2","newValue","type","isDown","isUp","indexOfCurrentSelection","indexOf","valueToBe","isFirstIndex","previousValue","isLastIndex","length","nextValue","inputProps","onBlur","placeholder","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","Component","Toolbar","Selectors","Data","Grid","_this2","requestFromAPI","isForDownload","queryString","filters","query","forEach","filter","filterLabel","filterValue","join","thisQuery","buildQueryString","getSize","getRows","rowGetter","rowIdx","onClearFilters","tags","download","isWaitingForDownload","pleaseHold","alert","handleClick","e","target","offsetParent","className","closeFilters","document","removeEventListener","showFilters","openFilters","addEventListener","findKey","isMeasureType","measureTypes","find","isSeasonalityType","seasonalityEnums","isAreaType","areaTypes","handleChange","checked","name","uniq","index","handleTagDelete","i","_this$state","tag","handleTagAdd","category","_this$state2","DownloadButton","isEmpty","disabled","onClick","isChecked","includes","makeCheckboxes","names","rows","supplemental","note","push","FilterForm","delimiters","keys","filterName","isLastItem","size","string","style","width","backgroundColor","color","fontWeight","ReactTags","handleDelete","handleAddition","geoSuggest","period","label","_columns","_this3","headers","blob","Blob","link","display","href","URL","createObjectURL","now","Date","getYear","getMonth","getDate","createFilename","click","_rows","lastItem","hasMoreResults","console","log","position","left","react_data_grid_default","columns","rowsCount","minHeight","minColumnWidth","toolbar","isSupersector","supersectors","isIndustry","industries","resizable","unemployment_Toolbar","App","grid","bind","assertThisInitialized","showGrid","prompt","laborStatistics","unemployment","Boolean","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2EAAAA,EAAOC,QAAU,CACf,gBACA,gBACA,kBACA,oBACA,4BACA,qBACA,UACA,gDACA,yBACA,8BACA,cACA,mBACA,gCACA,6BACA,gDACA,mCACA,eACA,4BACA,oCACA,uCACA,2CACA,8BACA,mBACA,2CACA,iDACA,8BACA,2DACA,iCACA,iCACA,oCACA,gBACA,gBACA,6BACA,iCACA,6DACA,mCACA,4CACA,4CACA,8BACA,oDACA,YACA,yCACA,oDACA,wEACA,+CACA,0BACA,gEACA,qCACA,0DACA,uCACA,kEACA,gDACA,gDACA,kDACA,oCACA,yCACA,6DACA,2CACA,iDACA,iFACA,+DACA,oCACA,qCACA,yCACA,8BACA,+CACA,oCACA,4CACA,yBACA,8CACA,0EACA,4CACA,+CACA,oCACA,uCACA,oBACA,qBACA,4BACA,kEACA,8BACA,qCACA,4CACA,sCACA,2BACA,6CACA,yBACA,wBACA,gBACA,gCACA,eACA,wDACA,wBACA,4BACA,wBACA,yBACA,oCACA,sBACA,oCACA,wCACA,0CACA,4CACA,yBACA,+BACA,4CACA,gEACA,6CACA,iCACA,+BACA,uCACA,kBACA,sCACA,0EACA,qDACA,+DACA,0EACA,gFACA,2EACA,0DACA,mDACA,yCACA,+CACA,yDACA,mDACA,oDACA,sDACA,sDACA,eACA,kCACA,qBACA,8BACA,iDACA,wCACA,mBACA,0BACA,mCACA,8DACA,yCACA,2BACA,iBACA,wBACA,gCACA,kCACA,oBACA,2CACA,kBACA,6CACA,6DACA,uDACA,+BACA,6BACA,oBACA,yEACA,gCACA,+CACA,0BACA,sCACA,qBACA,4CACA,6CACA,YACA,2DACA,2BACA,iCACA,qBACA,+BACA,sBACA,uBACA,uBACA,2BACA,+BACA,8CACA,6BACA,yCACA,0BACA,wCACA,4CACA,8CACA,6CACA,qCACA,0BACA,0BACA,cACA,0CACA,wDACA,sBACA,gDACA,sCACA,sCACA,iCACA,oCACA,2CACA,qBACA,iDACA,oCACA,0DACA,iDACA,6BACA,uBACA,wBACA,6FACA,iFACA,qBACA,sCACA,8CACA,4EACA,kEACA,4CACA,uBACA,qEACA,4CACA,qBACA,iCACA,+CACA,kDACA,+DACA,qCACA,cACA,yBACA,4CACA,oCACA,8BACA,0CACA,wBACA,yBACA,uEACA,qCACA,mDACA,iBACA,iEACA,mDACA,8BACA,+CACA,4DACA,+CACA,sDACA,yDACA,0CACA,2EACA,sCACA,iCACA,8BACA,sBACA,0BACA,4BACA,yBACA,8CACA,sCACA,iDACA,sCACA,yBACA,4CACA,gCACA,uBACA,mCACA,kBACA,mDACA,gCACA,oCACA,kCACA,wBACA,sBACA,wCACA,0BACA,sCACA,4BACA,wCACA,YACA,yCACA,4CACA,+DACA,0CACA,uDACA,sGACA,wFACA,oCACA,oBACA,iCACA,yDACA,sEACA,qCACA,0BACA,0BACA,sCACA,4DACA,4BACA,mBACA,2DACA,+CACA,sDACA,iDACA,8BACA,sBACA,4CACA,0CACA,kCACA,gBACA,yBACA,2CACA,gBACA,oCACA,wBACA,wCACA,sCACA,2BACA,sDACA,iBACA,yBACA,oCACA,8GACA,sDACA,gCACA,yBACA,mCACA,0BACA,yEACA,0BACA,kCACA,gCACA,iCACA,sEACA,aACA,qBACA,oBACA,qDACA,8CACA,mGACA,+BACA,wBACA,iDACA,+DACA,sBACA,mBACA,wCACA,uCACA,6BACA,gEACA,mBACA,gBACA,wCACA,kDACA,iBACA,6BACA,sDACA,mCACA,4TCrVIC,EAAcC,EAAQ,KAsIbC,cAnIb,SAAAA,EAAYC,EAAOC,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IAC1BG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAML,EAAOC,KASfQ,cAAgB,SAAAC,GACd,IAAMC,EAAUT,EAAKF,MAAMY,QACrBC,EAAI,UAAAC,OAAcC,OAAOC,SAASC,SAA9B,UAAAH,OAAiDH,EAAjD,iBAAAG,OAA0EJ,GAEpF,OAAO,IAAIQ,QAAS,SAACC,EAASC,GAC5BC,IAAMC,IAAKT,GACRU,KAAM,SAAAC,GACLL,EAAQK,EAASC,QAElBC,MAAO,SAAAC,GACNP,EAAOO,QApBazB,EA0B5B0B,QAAU,WACR1B,EAAK2B,SAAS,CACZC,YAAa,MA5BW5B,EAgC5B6B,QAAUC,IAAEC,SAAU,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACvBjC,EAAKO,cAAe0B,GACjBZ,KAAM,SAAAO,GACL,IAAMM,EAAkBN,EAAYO,IAAI,SAAAC,GAAG,OAAIA,EAAIC,OACnDrC,EAAK2B,SAAS,CACZC,YAAaM,OAGlB,KAxCyBlC,EA0C5BsC,iBAAmB,SAAEC,GACnB,OAAOC,EAAAC,EAAAC,cAAA,WAAOH,IA3CYvC,EA8C5B2C,iBAAmB,SAAEC,GACnB,IAAIC,EAAQ,EACZ,OACEL,EAAAC,EAAAC,cAAA,WAEEE,EAAWT,IAAK,SAAAW,GAEd,OADAD,IACOL,EAAAC,EAAAC,cAAA,OAAKK,IAAKF,GAASC,OArDN9C,EA4D5BgD,UAAY,SAACC,GACX,IAAMC,EAA0B,KAAhBD,EAAME,MAChBC,EAA8B,IAAhBH,EAAME,MAE1B,GAAKD,EAAU,CACb,IAAMG,EAAYrD,EAAKsD,MAAMrB,MAC7BjC,EAAKF,MAAMyD,IAAI,CAACC,KAAMH,EAAWI,GAAIJ,GAAY,QACjDrD,EAAK2B,SAAS,CAACM,MAAO,KAEnBmB,GACHpD,EAAKF,MAAM4D,OAAO,OAAQ,SAtEF1D,EA0E5B2D,SAAW,SAACV,EAADW,GAAyB,IAAfC,EAAeD,EAAfC,SAMnB,GALmB,WAAfZ,EAAMa,MACR9D,EAAK2B,SAAS,CACZM,MAAO4B,IAGS,YAAfZ,EAAMa,KAAqB,CAC9B,IAAMC,EAAyB,KAAhBd,EAAME,MACfa,EAAuB,KAAhBf,EAAME,MAEbc,EAA0BjE,EAAKsD,MAAM1B,YAAYsC,QAASlE,EAAKsD,MAAMrB,OAEvEkC,EAAYnE,EAAKsD,MAAMrB,MAC3B,GAAK+B,EAAO,CACV,IAAMI,EAA2C,IAA5BH,EACfI,EAAgBrE,EAAKsD,MAAM1B,YAAaqC,EAA0B,GACxEE,EAAYC,EAAepE,EAAKsD,MAAMrB,MAAQoC,EAEhD,GAAKN,EAAS,CACZ,IAAMO,EAAcL,EAA0B,IAAMjE,EAAKsD,MAAM1B,YAAY2C,OACrEC,EAAYxE,EAAKsD,MAAM1B,YAAaqC,EAA0B,GACpEE,EAAYG,EAActE,EAAKsD,MAAMrB,MAAQuC,EAG/CxE,EAAK2B,SAAS,CACZM,MAAOkC,MAhGXnE,EAAKsD,MAAQ,CACXrB,MAAO,GACPL,YAAa,GACbgB,WAAY,IANY5C,wEAyG1B,IAAM4B,EAAczB,KAAKmD,MAAM1B,YAEzB6C,EAAa,CACjBxC,MAAO9B,KAAKmD,MAAMrB,MAClB0B,SAAUxD,KAAKwD,SACfX,UAAW7C,KAAK6C,UAChB0B,OAAQ,aACRZ,KAAM,SACNa,YAAa,YAGf,OACEnC,EAAAC,EAAAC,cAAA,WACIvC,KAAKwC,iBAAkBxC,KAAKmD,MAAMV,YACpCJ,EAAAC,EAAAC,cAAC/C,EAAD,CACEiC,YAAcA,EACdgD,4BAA8BzE,KAAK0B,QACnCgD,4BAA8B1E,KAAKuB,QACnCoD,mBAAqB3E,KAAKI,cAC1B+B,iBAAmBnC,KAAKmC,iBACxBmC,WAAaA,YA9HEM,eCKrBnF,EAAQ,IAFVoF,YACQC,IAARC,KAAQD,cAkfKE,cA7db,SAAAA,EAAYrF,EAAOC,GAAS,IAAAC,EAAAoF,EAAAjF,KAAA,OAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAgF,IAC1BnF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkF,GAAA7E,KAAAH,KAAML,EAAOC,KAoIfsF,eAAiB,SAAEC,GACjB,IAAMC,EAxJV,SAA2BC,GACzB,IAAIC,EAAQ,IAOZ,OANA3D,IAAE4D,QAAQF,EAAS,SAACG,EAAQ5C,GAC1B,IAAI6C,EAAc7C,EACd8C,EAAcF,EAAOG,KAAK,KACxBC,EAAS,GAAAnF,OAAOgF,EAAP,KAAAhF,OAAwBiF,EAAxB,KACfJ,GAASM,IAEJN,EAgJeO,CAAkBhG,EAAKsD,MAAMkC,SACjDxF,EAAKO,cAAegF,EAAaD,IAvIPtF,EA0I5BiG,QAAU,WACR,OAAOjG,EAAKkG,UAAU3B,QA3IIvE,EA8I5BkG,QAAU,WACR,OAAOjB,EAAUiB,QAAQlG,EAAKsD,QA/IJtD,EAkJ5BmG,UAAY,SAACC,GAEX,OADWpG,EAAKkG,UACJE,IApJcpG,EAuJ5BqG,eAAiB,WAEfrG,EAAK2B,SAAS,CACZ6D,QAAS,GACTc,KAAM,IACLtG,EAAKqF,iBA5JkBrF,EA+J5BuG,SAAW,WACTvG,EAAK2B,SAAS,CAAC6E,sBAAqB,IACpCxG,EAAKqF,gBAAgB,IAjKKrF,EAoK5ByG,WAAa,WACXC,MAAM,mDArKoB1G,EAwK5B2G,YAAc,SAAAC,GAEKA,EAAEC,OAAOC,cAAoD,gBAApCF,EAAEC,OAAOC,aAAaC,WAIhE/G,EAAKgH,gBA9KqBhH,EAiL5BgH,aAAe,WACbC,SAASC,oBAAoB,YAAalH,EAAK2G,aAAa,GAC5D3G,EAAK2B,SAAS,CACZwF,aAAa,KApLWnH,EAwL5BoH,YAAc,WACZH,SAASI,iBAAiB,YAAarH,EAAK2G,aAAa,GACzD3G,EAAK2B,SAAS,CACZwF,aAAa,KA3LWnH,EA+L5BsH,QAAU,SAAErF,GACV,IAAIc,EAAM,GAEJwE,EAAgBvH,EAAKwH,aAAaC,KAAM,SAAA3D,GAAI,OAAIA,IAAS7B,IACzDyF,EAAoB1H,EAAK2H,iBAAiBF,KAAM,SAAA3D,GAAI,OAAIA,EAAKf,MAAQd,IACrE2F,EAAa5H,EAAK6H,UAAUJ,KAAM,SAAA3D,GAAI,OAAIA,IAAS7B,IAQzD,OAPKsF,EACHxE,EAAM,eACI2E,EACV3E,EAAM,mBACI6E,IACV7E,EAAM,aAEDA,GA5MmB/C,EA+M5B8H,aAAe,SAAA7E,GAAS,IACduC,EAAYxF,EAAKsD,MAAjBkC,QACFqB,EAAS5D,EAAM4D,OACf5E,EAAwB,aAAhB4E,EAAO/C,KAAsB+C,EAAOkB,QAAUlB,EAAO5E,MAC7D+F,EAAOnB,EAAOmB,KAEpB,GAAqB,aAAhBnB,EAAO/C,KAAsB,CAChC,IAAMf,EAAM/C,EAAKsH,QAASU,GAErB/F,EAEHuD,EAASzC,GAAQjB,IAAEmG,MAAQzC,EAASzC,IAAS,IAAKnC,OAAQoH,KAG1DxC,EAASzC,GAAQjB,IAAEmG,KAAMzC,EAASzC,GAAM4C,OAAQ,SAAAuC,GAAK,OAAIA,IAAUF,KACpC,IAA1BxC,EAASzC,GAAMwB,eAEXiB,EAASzC,IAKtB/C,EAAK2B,SAAS,CACZ6D,QAASA,KAtOexF,EA0O5BmI,gBAAkB,SAACC,EAAGrF,GACpB,GAAM/C,EAAKsD,MAAMgD,KAAKjE,MAAwC,IAAhCrC,EAAKsD,MAAMgD,KAAKjE,KAAKkC,OAAnD,CAIW,SAAN6D,GAAwB,SAARrF,IACnBqF,EAAIpI,EAAKsD,MAAMgD,KAAKjE,KAAKkC,OAAS,GANR,IAAA8D,EAQFrI,EAAKsD,MAAvBkC,EARoB6C,EAQpB7C,QAASc,EARW+B,EAQX/B,KACXd,EAASzC,KAGfyC,EAASzC,GAAQyC,EAAQzC,GAAK4C,OAAO,SAAC2C,EAAKJ,GAAN,OAAgBA,IAAUE,IAChC,IAA1B5C,EAASzC,GAAMwB,eAEXiB,EAASzC,GAElBuD,EAAMvD,GAAQuD,EAAKvD,GAAK4C,OAAO,SAAC2C,EAAKJ,GAAN,OAAgBA,IAAUE,IACzDpI,EAAK2B,SAAS,CACZ6D,QAASA,EACTc,KAAMA,OA9PkBtG,EAkQ5BuI,aAAe,SAACD,EAAKE,GAAa,IAAAC,EACNzI,EAAKsD,MAAvBkC,EADwBiD,EACxBjD,QAASc,EADemC,EACfnC,KACjBd,EAASgD,IAAehD,EAASgD,IAAc,IAAK5H,OAAQ0H,EAAI9E,MAChE8C,EAAMkC,IAAelC,EAAMkC,IAAc,IAAK5H,OAAQ0H,GACtDtI,EAAK2B,SAAS,CACZ6D,QAASA,EACTc,KAAMA,KAxQkBtG,EA4Q5B0I,eAAiB,WACf,OAAK5G,IAAE6G,QAAS3I,EAAKsD,MAAMkC,SAEvBhD,EAAAC,EAAAC,cAAA,UAAQkG,UAAQ,GAAhB,sDAMApG,EAAAC,EAAAC,cAAA,UAAQmG,QAAU7I,EAAKuG,UAAvB,2BArRsBvG,EA4R5B8I,UAAY,SAAC/F,EAAKiF,GAChB,OAAOhI,EAAKsD,MAAMkC,QAAQzC,IACxB/C,EAAKsD,MAAMkC,QAAQzC,GAAKgG,SAASf,IA9RThI,EAiS5BgJ,eAAiB,SAACjG,EAAKkG,GACrB,IAAMC,EAAO,GACTrG,EAAQ,EAyBZ,OAxBAoG,EAAMvD,QAAS,SAAAzD,GACb,IAAI+F,EAAO,GACPmB,EAAe,GAEE,iBAATlH,GACV+F,EAAO/F,EAAMc,IACboG,EAAelH,EAAMmH,MAErBpB,EAAO/F,EAGTiH,EAAKG,KAAK7G,EAAAC,EAAAC,cAAA,OAAKK,IAAMF,GACjBL,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,SACEsF,KAAOA,EACPlE,KAAK,WACLiE,QAAS/H,EAAK8I,UAAW/F,EAAKiF,GAC9BrE,SAAU3D,EAAK8H,eALjB,OAMUE,EANV,IAMmBmB,KAGvBtG,MAGKL,EAAAC,EAAAC,cAAA,WAAOwG,IA5TYlJ,EA+T5BsJ,WAAa,WACX,IAMMC,EAAa,CAHZ,EADE,IAMT,OACE/G,EAAAC,EAAAC,cAAA,OAAKqE,UAAU,eACVjF,IAAE6G,QAAS3I,EAAKsD,MAAMkC,SA2CrB,KA1CAhD,EAAAC,EAAAC,cAAA,6BAEEF,EAAAC,EAAAC,cAAA,UAEIzC,OAAOuJ,KAAMxJ,EAAKsD,MAAMkC,SAAUrD,IAAK,SAACsH,EAAYrB,GAClD,IAAMsB,EAAatB,EAAI,IAAMtG,IAAE6H,KAAM3J,EAAKsD,MAAMkC,SAE5CoE,EADW5J,EAAKsD,MAAMkC,QAASiE,GACf3D,KAAK,QAIzB,OAHM4D,IACJE,GAAU,QAGVpH,EAAAC,EAAAC,cAAA,MAAIK,IAAMqF,GAAMwB,MAKxBpH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEmH,MAAO,CACLC,MAAO,OACPC,gBAAiB,QACjBC,MAAO,QACPC,WAAY,OAEdpB,QAAU,kBAAM7I,EAAKqF,gBAAgB,KAPvC,oBAWF7C,EAAAC,EAAAC,cAAA,UACEmG,QAAS7I,EAAKqG,gBADhB,iBAKA7D,EAAAC,EAAAC,cAAC0C,EAAKsD,eAAN,MAEE1I,EAAKsD,MAAMkD,qBACThE,EAAAC,EAAAC,cAAA,QAAMmH,MAAO,CAACG,MAAO,UAArB,+BACA,MAMVxH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKqE,UAAU,cAAf,mHAGAvE,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,SACEqE,UAAU,cACVvE,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwH,EAAA,YAAD,CACE5D,KAAMtG,EAAKsD,MAAMgD,KAAKjE,KACtB8H,aAAc,aACdC,eAAgB,aAChBb,WAAYA,IACd/G,EAAAC,EAAAC,cAAC2H,EAAD,CACE3J,QAAQ,OACR6C,IAAMvD,EAAKuI,aACX7E,OAAS1D,EAAKmI,qBAItB3F,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwH,EAAA,YAAD,CACE5D,KAAMtG,EAAKsD,MAAMgD,KAAKgE,OACtBH,aAAc,SAAAvD,GAAC,OAAI5G,EAAKmI,gBAAgBvB,EAAG,WAC3CwD,eAAgB,SAAAxD,GAAC,OAAI5G,EAAKuI,aAAa3B,EAAG,WAC1C2C,WAAYA,OAIpB/G,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwH,EAAA,YAAD,CACE5D,KAAMtG,EAAKsD,MAAMgD,KAAKiE,MACtBJ,aAAc,SAAAvD,GAAC,OAAI5G,EAAKmI,gBAAgBvB,EAAG,UAC3CwD,eAAgB,SAAAxD,GAAC,OAAI5G,EAAKuI,aAAa3B,EAAG,UAC1C2C,WAAYA,OAIpB/G,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,uBACE1C,EAAKgJ,eAAgB,YAAahJ,EAAK6H,YAE3CrF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,0BACE1C,EAAKgJ,eAAgB,eAAgBhJ,EAAKwH,eAE9ChF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,wBACE1C,EAAKgJ,eAAgB,mBAAoBhJ,EAAK2H,sBA3axD3H,EAAKwK,SAAW,CACd,CACEzH,IAAK,cACLiF,KAAM,cACN8B,MAAO,KAET,CACE/G,IAAK,eACLiF,KAAM,eACN8B,MAAO,KAET,CACE/G,IAAK,YACLiF,KAAM,YACN8B,MAAO,KAET,CACE/G,IAAK,SACLiF,KAAM,SACN8B,MAAO,KAET,CACE/G,IAAK,QACLiF,KAAM,QACN8B,MAAO,KAET,CACE/G,IAAK,mBACLiF,KAAM,cACN8B,MAAO,KAET,CACE/G,IAAK,OACLiF,KAAM,OACN8B,MAAO,KAET,CACE/G,IAAK,YACLiF,KAAM,YACN8B,MAAO,KAET,CACE/G,IAAK,eACLiF,KAAM,eACN8B,MAAO,KAET,CACE/G,IAAK,QACLiF,KAAM,QACN8B,MAAO,MAIX9J,EAAK2H,iBAAmB,CAAE,CACxB5E,IAAK,IACLqG,KAAM,yBACL,CACDrG,IAAK,IACLqG,KAAM,mBAERpJ,EAAK6H,UAAY,CACf,WACA,YACA,qBACA,yBACA,qBACA,iBACA,2BACA,2CACA,0DACA,+CACA,wCACA,uCACA,yBACA,iBACA,oBAEF7H,EAAKwH,aAAe,CAClB,oBACA,eACA,aACA,eAGFxH,EAAKsD,MAAQ,CACX6D,aAAa,EACb+B,KAAM,GACN1D,QAAS,GACTc,KAAM,IA3FkBtG,6EA+FbyF,EAAOH,GAAgB,IAAAmF,EAAAtK,KAChCQ,EAAI,UAAAC,OAAcC,OAAOC,SAASC,SAA9B,cACHuE,IACH3E,GAAQ,aAEL8E,IACH9E,GAAQ8E,GAGVtE,IAAMC,IAAKT,GACRU,KAAM,SAAAC,GACL,GAAKgE,EAAgB,CACnB,IAAIoF,EAAUpJ,EAASoJ,QACnBC,EAAO,IAAIC,KAAK,CAACtJ,EAASC,MAAM,CAACuC,KAAK4G,EAAQ,kBAC9CG,EAAO5D,SAASvE,cAAc,KAClCmI,EAAKhB,MAAMiB,QAAU,OACrBD,EAAKE,KAAOlK,OAAOmK,IAAIC,gBAAgBN,GACvCE,EAAKtE,SAvHf,WACE,IAAM2E,EAAM,IAAIC,KAEhB,MADc,QAAAvK,OAAY,KAAOsK,EAAIE,UAAvB,KAAAxK,OAAsCsK,EAAIG,WAA1C,KAAAzK,OAA0DsK,EAAII,UAA9D,QAqHUC,GAChBV,EAAKW,QACLf,EAAK9I,SAAS,CAAC6E,sBAAsB,QAChC,CACLiE,EAAKgB,MAAQnK,EAASC,KACtB,IAAMmK,EAAWpK,EAASC,KAAKD,EAASC,KAAKgD,OAAS,GACjDmH,GAAYA,EAASC,eAG1BlB,EAAK9I,SAAS,CAACuH,KAAMuB,EAAKgB,WAG7BjK,MAAO,SAAAC,GACNmK,QAAQC,IAAI,4BAA6BpK,kDAK7CtB,KAAKI,iDAoTL,OAAKJ,KAAKsL,MAENjJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKqE,UAAU,kBACbvE,EAAAC,EAAAC,cAAA,UACEmG,QAAS1I,KAAKiH,aADhB,iBAKEjH,KAAKmD,MAAM6D,aAAe3E,EAAAC,EAAAC,cAAAvC,KAAMmJ,WAAN,OAI9B9G,EAAAC,EAAAC,cAAA,OAAKmH,MAAO,CACViC,SAAU,WACVC,KAAM,IACNjC,MAAO,SAEPtH,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CACEwJ,QAAS9L,KAAKqK,SACdrE,UAAWhG,KAAKgG,UAChB+F,UAAW/L,KAAK8F,UAChBkG,UAAW,IACXC,eAAgB,IAChBC,QAAS7J,EAAAC,EAAAC,cAACsC,EAAD,QAEXxC,EAAAC,EAAAC,cAAA,OAAKqE,UAAU,cAAf,uJAQC,YAzdMhC,iCClBfnF,EAAQ,IAFVoF,YACQC,IAARC,KAAQD,cA0fKE,cAreb,SAAAA,EAAYrF,EAAOC,GAAS,IAAAC,EAAAoF,EAAAjF,KAAA,OAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAgF,IAC1BnF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkF,GAAA7E,KAAAH,KAAML,EAAOC,KAgJfsF,eAAiB,SAAEC,GACjB,IAAMC,EApKV,SAA2BC,GACzB,IAAIC,EAAQ,IAOZ,OANA3D,IAAE4D,QAAQF,EAAS,SAACG,EAAQ5C,GAC1B,IAAI6C,EAAc7C,EACd8C,EAAcF,EAAOG,KAAK,KACxBC,EAAS,GAAAnF,OAAOgF,EAAP,KAAAhF,OAAwBiF,EAAxB,KACfJ,GAASM,IAEJN,EA4JeO,CAAkBhG,EAAKsD,MAAMkC,SACjDxF,EAAKO,cAAegF,EAAaD,IAnJPtF,EAsJ5BiG,QAAU,WACR,OAAOjG,EAAKkG,UAAU3B,QAvJIvE,EA0J5BkG,QAAU,WACR,OAAOjB,EAAUiB,QAAQlG,EAAKsD,QA3JJtD,EA8J5BmG,UAAY,SAACC,GAEX,OADWpG,EAAKkG,UACJE,IAhKcpG,EAmK5BqG,eAAiB,WAEfrG,EAAK2B,SAAS,CACZ6D,QAAS,GACTc,KAAM,IACLtG,EAAKqF,iBAxKkBrF,EA2K5BuG,SAAW,WACTvG,EAAK2B,SAAS,CAAC6E,sBAAqB,IACpCxG,EAAKqF,gBAAgB,IA7KKrF,EAgL5ByG,WAAa,WACXC,MAAM,mDAjLoB1G,EAoL5B2G,YAAc,SAAAC,GAEKA,EAAEC,OAAOC,cAAoD,gBAApCF,EAAEC,OAAOC,aAAaC,WAIhE/G,EAAKgH,gBA1LqBhH,EA6L5BgH,aAAe,WACbC,SAASC,oBAAoB,YAAalH,EAAK2G,aAAa,GAC5D3G,EAAK2B,SAAS,CACZwF,aAAa,KAhMWnH,EAoM5BoH,YAAc,WACZH,SAASI,iBAAiB,YAAarH,EAAK2G,aAAa,GACzD3G,EAAK2B,SAAS,CACZwF,aAAa,KAvMWnH,EA2M5BsH,QAAU,SAAErF,GACV,IAAIc,EAAM,GAEJuJ,EAAgBtM,EAAKuM,aAAa9E,KAAM,SAAA3D,GAAI,OAAIA,IAAS7B,IACzDyF,EAAoB1H,EAAK2H,iBAAiBF,KAAM,SAAA3D,GAAI,OAAIA,EAAKf,MAAQd,IACrEuK,EAAaxM,EAAKyM,WAAWhF,KAAM,SAAA3D,GAAI,OAAIA,IAAS7B,IAQ1D,OAPKqK,EACHvJ,EAAM,mBACI2E,EACV3E,EAAM,mBACIyJ,IACVzJ,EAAM,iBAEDA,GAxNmB/C,EA2N5B8H,aAAe,SAAA7E,GAAS,IACduC,EAAYxF,EAAKsD,MAAjBkC,QACFqB,EAAS5D,EAAM4D,OACf5E,EAAwB,aAAhB4E,EAAO/C,KAAsB+C,EAAOkB,QAAUlB,EAAO5E,MAC7D+F,EAAOnB,EAAOmB,KAEpB,GAAqB,aAAhBnB,EAAO/C,KAAsB,CAChC,IAAMf,EAAM/C,EAAKsH,QAASU,GAErB/F,EAEHuD,EAASzC,GAAQjB,IAAEmG,MAAQzC,EAASzC,IAAS,IAAKnC,OAAQoH,KAG1DxC,EAASzC,GAAQjB,IAAEmG,KAAMzC,EAASzC,GAAM4C,OAAQ,SAAAuC,GAAK,OAAIA,IAAUF,KACpC,IAA1BxC,EAASzC,GAAMwB,eAEXiB,EAASzC,IAKtB/C,EAAK2B,SAAS,CACZ6D,QAASA,KAlPexF,EAsP5BmI,gBAAkB,SAACC,EAAGrF,GACpB,GAAW,SAANqF,GAAwB,SAARrF,IACnBqF,EAAIpI,EAAKsD,MAAMgD,KAAKjE,MAAQrC,EAAKsD,MAAMgD,KAAKjE,KAAKkC,OAAS,GAD5D,CAD4B,IAAA8D,EAOFrI,EAAKsD,MAAvBkC,EAPoB6C,EAOpB7C,QAASc,EAPW+B,EAOX/B,KACXd,EAASzC,KAGfyC,EAASzC,GAAQyC,EAAQzC,GAAK4C,OAAO,SAAC2C,EAAKJ,GAAN,OAAgBA,IAAUE,IAChC,IAA1B5C,EAASzC,GAAMwB,eAEXiB,EAASzC,GAElBuD,EAAMvD,GAAQuD,EAAKvD,GAAK4C,OAAO,SAAC2C,EAAKJ,GAAN,OAAgBA,IAAUE,IACzDpI,EAAK2B,SAAS,CACZ6D,QAASA,EACTc,KAAMA,OAzQkBtG,EA6Q5BuI,aAAe,SAACD,EAAKE,GAAa,IAAAC,EACNzI,EAAKsD,MAAvBkC,EADwBiD,EACxBjD,QAASc,EADemC,EACfnC,KACjBd,EAASgD,IAAehD,EAASgD,IAAc,IAAK5H,OAAQ0H,EAAI9E,MAChE8C,EAAMkC,IAAelC,EAAMkC,IAAc,IAAK5H,OAAQ0H,GACtDtI,EAAK2B,SAAS,CACZ6D,QAASA,EACTc,KAAMA,KAnRkBtG,EAuR5B0I,eAAiB,WACf,OAAI1I,EAAKyL,OAA+B,IAAtBzL,EAAKyL,MAAMlH,OAEzB/B,EAAAC,EAAAC,cAAA,UAAQkG,UAAQ,GAAhB,oCAMApG,EAAAC,EAAAC,cAAA,UAAQmG,QAAU7I,EAAKuG,UAAvB,2BAhSsBvG,EAuS5B8I,UAAY,SAAC/F,EAAKiF,GAChB,OAAOhI,EAAKsD,MAAMkC,QAAQzC,IACxB/C,EAAKsD,MAAMkC,QAAQzC,GAAKgG,SAASf,IAzSThI,EA4S5BgJ,eAAiB,SAACjG,EAAKkG,GACrB,IAAMC,EAAO,GACTrG,EAAQ,EAyBZ,OAxBAoG,EAAMvD,QAAS,SAAAzD,GACb,IAAI+F,EAAO,GACPmB,EAAe,GAEE,iBAATlH,GACV+F,EAAO/F,EAAMc,IACboG,EAAelH,EAAMmH,MAErBpB,EAAO/F,EAGTiH,EAAKG,KAAK7G,EAAAC,EAAAC,cAAA,OAAKK,IAAMF,GACjBL,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,SACEsF,KAAOA,EACPlE,KAAK,WACLiE,QAAS/H,EAAK8I,UAAW/F,EAAKiF,GAC9BrE,SAAU3D,EAAK8H,eALjB,OAMUE,EANV,IAMmBmB,KAGvBtG,MAGKL,EAAAC,EAAAC,cAAA,WAAOwG,IAvUYlJ,EA0U5BsJ,WAAa,WACX,IAMMC,EAAa,CAHZ,EADE,IAMT,OACE/G,EAAAC,EAAAC,cAAA,OAAKqE,UAAU,eACVjF,IAAE6G,QAAS3I,EAAKsD,MAAMkC,SA6CrB,KA5CAhD,EAAAC,EAAAC,cAAA,6BAEEF,EAAAC,EAAAC,cAAA,UAEIzC,OAAOuJ,KAAMxJ,EAAKsD,MAAMkC,SAAUrD,IAAK,SAACsH,EAAYrB,GAClD,IAAMsB,EAAatB,EAAI,IAAMtG,IAAE6H,KAAM3J,EAAKsD,MAAMkC,SAE5CoE,EADW5J,EAAKsD,MAAMkC,QAASiE,GACf3D,KAAK,QAIzB,OAHM4D,IACJE,GAAU,QAGVpH,EAAAC,EAAAC,cAAA,MAAIK,IAAMqF,GAAMwB,MAKxBpH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEmH,MAAO,CACLC,MAAO,OACPC,gBAAiB,QACjBC,MAAO,QACPC,WAAY,OAEdpB,QAAU,kBAAM7I,EAAKqF,gBAAgB,KAPvC,oBAWF7C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEmG,QAAS7I,EAAKqG,gBADhB,iBAKA7D,EAAAC,EAAAC,cAAC0C,EAAKsD,eAAN,OAGA1I,EAAKsD,MAAMkD,qBACThE,EAAAC,EAAAC,cAAA,QAAMmH,MAAO,CAACG,MAAO,UAArB,+BACA,MAMVxH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKqE,UAAU,cAAf,mHAGAvE,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwH,EAAA,YAAD,CACE5D,KAAMtG,EAAKsD,MAAMgD,KAAKhD,MACtB6G,aAAc,SAAAvD,GAAC,OAAI5G,EAAKmI,gBAAgBvB,EAAG,UAC3CwD,eAAgB,SAAAxD,GAAC,OAAI5G,EAAKuI,aAAa3B,EAAG,UAC1C2C,WAAYA,OAIpB/G,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwH,EAAA,YAAD,CACE5D,KAAMtG,EAAKsD,MAAMgD,KAAKgE,OACtBH,aAAc,SAAAvD,GAAC,OAAI5G,EAAKmI,gBAAgBvB,EAAG,WAC3CwD,eAAgB,SAAAxD,GAAC,OAAI5G,EAAKuI,aAAa3B,EAAG,WAC1C2C,WAAYA,OAIpB/G,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwH,EAAA,YAAD,CACE5D,KAAMtG,EAAKsD,MAAMgD,KAAKiE,MACtBJ,aAAc,SAAAvD,GAAC,OAAI5G,EAAKmI,gBAAgBvB,EAAG,UAC3CwD,eAAgB,SAAAxD,GAAC,OAAI5G,EAAKuI,aAAa3B,EAAG,UAC1C2C,WAAYA,OAIpB/G,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,wBACE1C,EAAKgJ,eAAgB,mBAAoBhJ,EAAK2H,mBAElDnF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,yBACE1C,EAAKgJ,eAAgB,cAAehJ,EAAKuM,eAE7C/J,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,uBACE1C,EAAKgJ,eAAgB,WAAYhJ,EAAKyM,gBAnbhDzM,EAAKwK,SAAW,CACd,CACEzH,IAAK,cACLiF,KAAM,cACN8B,MAAO,IACP4C,WAAW,GAEb,CACE3J,IAAK,eACLiF,KAAM,eACN8B,MAAO,KAET,CACE/G,IAAK,YACLiF,KAAM,YACN8B,MAAO,KAET,CACE/G,IAAK,SACLiF,KAAM,SACN8B,MAAO,KAET,CACE/G,IAAK,QACLiF,KAAM,QACN8B,MAAO,KAET,CACE/G,IAAK,mBACLiF,KAAM,cACN8B,MAAO,KAET,CACE/G,IAAK,QACLiF,KAAM,QACN8B,MAAO,KAET,CACE/G,IAAK,YACLiF,KAAM,YACN8B,MAAO,KAET,CACE/G,IAAK,kBACLiF,KAAM,kBACN8B,MAAO,KAET,CACE/G,IAAK,cACLiF,KAAM,cACN8B,MAAO,KAET,CACE/G,IAAK,WACLiF,KAAM,WACN8B,MAAO,KAET,CACE/G,IAAK,QACLiF,KAAM,QACN8B,MAAO,MAIX9J,EAAK2H,iBAAmB,CAAE,CACxB5E,IAAK,IACLqG,KAAM,yBACL,CACDrG,IAAK,IACLqG,KAAM,mBAERpJ,EAAKuM,aAAe,CAClB,gBACA,gBACA,kBACA,oBACA,4BACA,qBACA,oCACA,eACA,gBACA,gBACA,oBACA,uCACA,kBACA,eACA,+BACA,cACA,uBACA,qCACA,gCACA,0BACA,iBACA,cACFvM,EAAKyM,WAAaA,IAElBzM,EAAKsD,MAAQ,CACX6D,aAAa,EACb+B,KAAM,GACN1D,QAAS,GACTc,KAAM,IAvGkBtG,6EA2GbyF,EAAOH,GAAgB,IAAAmF,EAAAtK,KAChCQ,EAAI,UAAAC,OAAcC,OAAOC,SAASC,SAA9B,gBACHuE,IACH3E,GAAQ,aAEL8E,IACH9E,GAAQ8E,GAEVmG,QAAQC,IAAI,OAAQlL,GACpBQ,IAAMC,IAAKT,GACRU,KAAM,SAAAC,GACL,GAAKgE,EAAgB,CACnB,IAAIoF,EAAUpJ,EAASoJ,QACnBC,EAAO,IAAIC,KAAK,CAACtJ,EAASC,MAAM,CAACuC,KAAK4G,EAAQ,kBAC9CG,EAAO5D,SAASvE,cAAc,KAClCmI,EAAKhB,MAAMiB,QAAU,OACrBD,EAAKE,KAAOlK,OAAOmK,IAAIC,gBAAgBN,GACvCE,EAAKtE,SAnIf,WACE,IAAM2E,EAAM,IAAIC,KAEhB,MADc,cAAAvK,OAAkB,KAAOsK,EAAIE,UAA7B,KAAAxK,OAA4CsK,EAAIG,WAAhD,KAAAzK,OAAgEsK,EAAII,UAApE,QAiIUC,GAChBV,EAAKW,QACLf,EAAK9I,SAAS,CAAC6E,sBAAsB,QAChC,CACLiE,EAAKgB,MAAQnK,EAASC,KACtB,IAAMmK,EAAWpK,EAASC,KAAKD,EAASC,KAAKgD,OAAS,GACjDmH,GAAYA,EAASC,eAG1BlB,EAAK9I,SAAS,CAACuH,KAAMuB,EAAKgB,WAG7BjK,MAAO,SAAAC,GACNmK,QAAQC,IAAI,4BAA6BpK,kDAK7CtB,KAAKI,iDAgTL,OAAKJ,KAAKsL,MAENjJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKqE,UAAU,kBACbvE,EAAAC,EAAAC,cAAA,UACEmG,QAAS1I,KAAKiH,aADhB,iBAKEjH,KAAKmD,MAAM6D,aAAe3E,EAAAC,EAAAC,cAAAvC,KAAMmJ,WAAN,OAI9B9G,EAAAC,EAAAC,cAAA,OAAKmH,MAAO,CACViC,SAAU,WACVC,KAAM,IACNjC,MAAO,SAEPtH,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CACEwJ,QAAS9L,KAAKqK,SACdrE,UAAWhG,KAAKgG,UAChB+F,UAAW/L,KAAK8F,UAChBkG,UAAW,IACXC,eAAgB,IAChBC,QAAS7J,EAAAC,EAAAC,cAACiK,EAAD,QAEXnK,EAAAC,EAAAC,cAAA,OAAKqE,UAAU,cAAf,uJAQC,YAjeMhC,aCgBJ6H,cAxCb,SAAAA,EAAY9M,EAAOC,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyM,IAC1B5M,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2M,GAAAtM,KAAAH,KAAML,EAAOC,KAERuD,MAAQ,CACXuJ,KAAM,gBAGR7M,EAAK2G,YAAc3G,EAAK2G,YAAYmG,KAAjB7M,OAAA8M,EAAA,EAAA9M,QAAA8M,EAAA,EAAA9M,CAAAD,KACnBA,EAAKgN,SAAWhN,EAAKgN,SAASF,KAAd7M,OAAA8M,EAAA,EAAA9M,QAAA8M,EAAA,EAAA9M,CAAAD,KARUA,2EAWfiN,GACX9M,KAAKwB,SAAS,CACZkL,KAAMI,uCAKR,MAAyB,UAApB9M,KAAKmD,MAAMuJ,KACPrK,EAAAC,EAAAC,cAACwK,EAAD,MACuB,iBAApB/M,KAAKmD,MAAMuJ,KACdrK,EAAAC,EAAAC,cAACyK,EAAD,WADF,mCAKA,IAAA/H,EAAAjF,KACP,OACEqC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQmG,QAAS,kBAAMzD,EAAKuB,YAAY,WAAxC,6CAGAnE,EAAAC,EAAAC,cAAA,UAAQmG,QAAS,kBAAMzD,EAAKuB,YAAY,kBAAxC,sBAGExG,KAAK6M,mBAnCGjI,aCMEqI,QACW,cAA7BvM,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASsM,MACvB,2DCZNC,IAASC,OAAO/K,EAAAC,EAAAC,cAAC8K,EAAD,MAASvG,SAASwG,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvM,KAAK,SAAAwM,GACjCA,EAAaC","file":"static/js/main.be87dd62.chunk.js","sourcesContent":["module.exports = [\n  'Total Nonfarm',\n  'Total Private',\n  'Goods Producing',\n  'Service-Providing',\n  'Private Service Providing',\n  'Mining and Logging',\n  'Logging',\n  'Mining, Quarrying, and Oil and Gas Extraction',\n  'Oil and Gas Extraction',\n  'Mining (except Oil and Gas)',\n  'Coal Mining',\n  'Metal Ore Mining',\n  'Support Activities for Mining',\n  'Drilling Oil and Gas Wells',\n  'Support Activities for Oil and Gas Operations',\n  'Mining, Logging and Construction',\n  'Construction',\n  'Construction of Buildings',\n  'Residential Building Construction',\n  'Nonresidential Building Construction',\n  'Heavy and Civil Engineering Construction',\n  'Utility System Construction',\n  'Land Subdivision',\n  'Highway, Street, and Bridge Construction',\n  'Other Heavy and Civil Engineering Construction',\n  'Specialty Trade Contractors',\n  'Foundation, Structure, and Building Exterior Contractors',\n  'Building Equipment Contractors',\n  'Building Finishing Contractors',\n  'Other Specialty Trade Contractors',\n  'Manufacturing',\n  'Durable Goods',\n  'Wood Product Manufacturing',\n  'Sawmills and Wood Preservation',\n  'Veneer, Plywood, and Engineered Wood Product Manufacturing',\n  'Other Wood Product Manufacturing',\n  'Nonmetallic Mineral Product Manufacturing',\n  'Cement and Concrete Product Manufacturing',\n  'Primary Metal Manufacturing',\n  'Iron and Steel Mills and Ferroalloy Manufacturing',\n  'Foundries',\n  'Fabricated Metal Product Manufacturing',\n  'Architectural and Structural Metals Manufacturing',\n  'Machine Shops; Turned Product; and Screw, Nut, and Bolt Manufacturing',\n  'Other Fabricated Metal Product Manufacturing',\n  'Machinery Manufacturing',\n  'Agriculture, Construction, and Mining Machinery Manufacturing',\n  'Industrial Machinery Manufacturing',\n  'Commercial and Service Industry Machinery Manufacturing',\n  'Metalworking Machinery Manufacturing',\n  'Engine, Turbine, and Power Transmission Equipment Manufacturing',\n  'Other General Purpose Machinery Manufacturing',\n  'Computer and Electronic Product Manufacturing',\n  'Computer and Peripheral Equipment Manufacturing',\n  'Electronic Computer Manufacturing',\n  'Communications Equipment Manufacturing',\n  'Semiconductor and Other Electronic Component Manufacturing',\n  'Bare Printed Circuit Board Manufacturing',\n  'Semiconductor and Related Device Manufacturing',\n  'Navigational, Measuring, Electromedical, and Control Instruments Manufacturing',\n  'Electrical Equipment, Appliance, and Component Manufacturing',\n  'Household Appliance Manufacturing',\n  'Electrical Equipment Manufacturing',\n  'Transportation Equipment Manufacturing',\n  'Motor Vehicle Manufacturing',\n  'Motor Vehicle Body and Trailer Manufacturing',\n  'Motor Vehicle Parts Manufacturing',\n  'Aerospace Product and Parts Manufacturing',\n  'Ship and Boat Building',\n  'Furniture and Related Product Manufacturing',\n  'Household and Institutional Furniture and Kitchen Cabinet Manufacturing',\n  'Miscellaneous durable goods manufacturing',\n  'Medical Equipment and Supplies Manufacturing',\n  'Other Miscellaneous Manufacturing',\n  'Jewelry and Silverware Manufacturing',\n  'Non-Durable Goods',\n  'Food Manufacturing',\n  'Grain and Oilseed Milling',\n  'Fruit and Vegetable Preserving and Specialty Food Manufacturing',\n  'Dairy Product Manufacturing',\n  'Animal Slaughtering and Processing',\n  'Seafood Product Preparation and Packaging',\n  'Bakeries and Tortilla Manufacturing',\n  'Other Food Manufacturing',\n  'Beverage and Tobacco Product Manufacturing',\n  'Beverage Manufacturing',\n  'Tobacco Manufacturing',\n  'Textile Mills',\n  'Fiber, Yarn, and Thread Mills',\n  'Fabric Mills',\n  'Textile and Fabric Finishing and Fabric Coating Mills',\n  'Textile Product Mills',\n  'Textile Furnishings Mills',\n  'Apparel Manufacturing',\n  'Apparel Knitting Mills',\n  'Cut and Sew Apparel Manufacturing',\n  'Paper Manufacturing',\n  'Pulp, Paper, and Paperboard Mills',\n  'Converted Paper Product Manufacturing',\n  'Printing and Related Support Activities',\n  'Petroleum and Coal Products Manufacturing',\n  'Chemical Manufacturing',\n  'Basic Chemical Manufacturing',\n  'Pharmaceutical and Medicine Manufacturing',\n  'Soap, Cleaning Compound, and Toilet Preparation Manufacturing',\n  'Plastics and Rubber Products Manufacturing',\n  'Plastics Product Manufacturing',\n  'Rubber Product Manufacturing',\n  'Trade, Transportation, and Utilities',\n  'Wholesale Trade',\n  'Merchant Wholesalers, Durable Goods',\n  'Motor Vehicle and Motor Vehicle Parts and Supplies Merchant Wholesalers',\n  'Furniture and Home Furnishing Merchant Wholesalers',\n  'Lumber and Other Construction Materials Merchant Wholesalers',\n  'Professional and Commercial Equipment and Supplies Merchant Wholesalers',\n  'Household Appliances and Electrical and Electronic Goods Merchant Wholesalers',\n  'Hardware, and Plumbing and Heating Equipment and Supplies Merchant Whole',\n  'Machinery, Equipment, and Supplies Merchant Wholesalers',\n  'Miscellaneous Durable Goods Merchant Wholesalers',\n  'Merchant Wholesalers, Nondurable Goods',\n  'Paper and Paper Product Merchant Wholesalers',\n  'Apparel, Piece Goods, and Notions Merchant Wholesalers',\n  'Grocery and Related Product Merchant Wholesalers',\n  'Chemical and Allied Products Merchant Wholesalers',\n  'Miscellaneous Nondurable Goods Merchant Wholesalers',\n  'Wholesale Electronic Markets and Agents and Brokers',\n  'Retail Trade',\n  'Motor Vehicle and Parts Dealers',\n  'Automobile Dealers',\n  'Other Motor Vehicle Dealers',\n  'Automotive Parts, Accessories, and Tire Stores',\n  'Furniture and Home Furnishings Stores',\n  'Furniture Stores',\n  'Home Furnishings Stores',\n  'Electronics and Appliance Stores',\n  'Building Material and Garden Equipment and Supplies Dealers',\n  'Building Material and Supplies Dealers',\n  'Food and Beverage Stores',\n  'Grocery Stores',\n  'Specialty Food Stores',\n  'Beer, Wine, and Liquor Stores',\n  'Health and Personal Care Stores',\n  'Gasoline Stations',\n  'Clothing and Clothing Accessories Stores',\n  'Clothing Stores',\n  'Jewelry, Luggage, and Leather Goods Stores',\n  'Sporting Goods, Hobby, Musical Instrument, and Book Stores',\n  'Sporting Goods, Hobby, and Musical Instrument Stores',\n  'Book Stores and News Dealers',\n  'General Merchandise Stores',\n  'Department Stores',\n  'General Merchandise Stores, including Warehouse Clubs and Supercenters',\n  'Miscellaneous Store Retailers',\n  'Office Supplies, Stationery, and Gift Stores',\n  'Used Merchandise Stores',\n  'Other Miscellaneous Store Retailers',\n  'Nonstore Retailers',\n  'Electronic Shopping and Mail-Order Houses',\n  'Transportation, Warehousing, and Utilities',\n  'Utilities',\n  'Electric Power Generation, Transmission and Distribution',\n  'Natural Gas Distribution',\n  'Transportation and Warehousing',\n  'Air Transportation',\n  'Scheduled Air Transportation',\n  'Rail Transportation',\n  'Water Transportation',\n  'Truck Transportation',\n  'General Freight Trucking',\n  'Specialized Freight Trucking',\n  'Transit and Ground Passenger Transportation',\n  'Taxi and Limousine Service',\n  'School and Employee Bus Transportation',\n  'Pipeline Transportation',\n  'Support Activities for Transportation',\n  'Support Activities for Air Transportation',\n  'Support Activities for Water Transportation',\n  'Support Activities for Road Transportation',\n  'Freight Transportation Arrangement',\n  'Couriers and Messengers',\n  'Warehousing and Storage',\n  'Information',\n  'Publishing Industries (except Internet)',\n  'Newspaper, Periodical, Book, and Directory Publishers',\n  'Software Publishers',\n  'Motion Picture and Sound Recording Industries',\n  'Motion Picture and Video Industries',\n  'Motion Picture and Video Production',\n  'Broadcasting (except Internet)',\n  'Radio and Television Broadcasting',\n  'Cable and Other Subscription Programming',\n  'Telecommunications',\n  'Wired and Wireless Telecommunications Carriers',\n  'Wired Telecommunications Carriers',\n  'Wireless Telecommunications Carriers (except Satellite)',\n  'Data Processing, Hosting, and Related Services',\n  'Other Information Services',\n  'Financial Activities',\n  'Finance and Insurance',\n  'Credit Intermediation and Related Activities including Monetary Authorities - Central Bank',\n  'Depository Credit Intermediation including Monetary Authorities - Central Bank',\n  'Commercial Banking',\n  'Nondepository Credit Intermediation',\n  'Activities Related to Credit Intermediation',\n  'Financial Investments and Related Activities including Financial Vehicles',\n  'Securities and Commodity Contracts Intermediation and Brokerage',\n  'Investment Banking and Securities Dealing',\n  'Securities Brokerage',\n  'Other Financial Investment Activities including Financial Vehicles',\n  'Insurance Carriers and Related Activities',\n  'Insurance Carriers',\n  'Direct Life Insurance Carriers',\n  'Direct Health and Medical Insurance Carriers',\n  'Direct Property and Casualty Insurance Carriers',\n  'Agencies, Brokerages, and Other Insurance Related Activities',\n  'Real Estate and Rental and Leasing',\n  'Real Estate',\n  'Lessors of Real Estate',\n  'Offices of Real Estate Agents and Brokers',\n  'Activities Related to Real Estate',\n  'Rental and Leasing Services',\n  'Automotive Equipment Rental and Leasing',\n  'Consumer Goods Rental',\n  'General Rental Centers',\n  'Commercial and Industrial Machinery and Equipment Rental and Leasing',\n  'Professional and Business Services',\n  'Professional, Scientific, and Technical Services',\n  'Legal Services',\n  'Accounting, Tax Preparation, Bookkeeping, and Payroll Services',\n  'Architectural, Engineering, and Related Services',\n  'Specialized Design Services',\n  'Computer Systems Design and Related Services',\n  'Management, Scientific, and Technical Consulting Services',\n  'Scientific Research and Development Services',\n  'Advertising, Public Relations, and Related Services',\n  'Other Professional, Scientific, and Technical Services',\n  'Management of Companies and Enterprises',\n  'Administrative and Support and Waste Management and Remediation Services',\n  'Administrative and Support Services',\n  'Office Administrative Services',\n  'Facilities Support Services',\n  'Employment Services',\n  'Temporary Help Services',\n  'Business Support Services',\n  'Telephone Call Centers',\n  'Travel Arrangement and Reservation Services',\n  'Investigation and Security Services',\n  'Investigation, Guard, and Armored Car Services',\n  'Services to Buildings and Dwellings',\n  'Other Support Services',\n  'Waste Management and Remediation Services',\n  'Education and Health Services',\n  'Educational Services',\n  'Elementary and Secondary Schools',\n  'Junior Colleges',\n  'Colleges, Universities, and Professional Schools',\n  'Other Schools and Instruction',\n  'Health Care and Social Assistance',\n  'Ambulatory Health Care Services',\n  'Offices of Physicians',\n  'Offices of Dentists',\n  'Offices of Other Health Practitioners',\n  'Outpatient Care Centers',\n  'Medical and Diagnostic Laboratories',\n  'Home Health Care Services',\n  'Other Ambulatory Health Care Services',\n  'Hospitals',\n  'General Medical and Surgical Hospitals',\n  'Psychiatric and Substance Abuse Hospitals',\n  'Specialty (except Psychiatric and Substance Abuse) Hospitals',\n  'Nursing and Residential Care Facilities',\n  'Nursing Care Facilities (Skilled Nursing Facilities)',\n  'Residential Intellectual and Developmental Disability, Mental Health and Substance Abuse Facilities',\n  'Continuing Care Retirement Communities and Assisted Living Facilities for the Elderly',\n  'Other Residential Care Facilities',\n  'Social Assistance',\n  'Individual and Family Services',\n  'Services for the Elderly and Persons with Disabilities',\n  'Community Food and Housing, and Emergency and Other Relief Services',\n  'Vocational Rehabilitation Services',\n  'Child Day Care Services',\n  'Leisure and Hospitality',\n  'Arts, Entertainment, and Recreation',\n  'Performing Arts, Spectator Sports, and Related Industries',\n  'Performing Arts Companies',\n  'Spectator Sports',\n  'Promoters of Performing Arts, Sports, and Similar Events',\n  'Independent Artists, Writers, and Performers',\n  'Museums, Historical Sites, and Similar Institutions',\n  'Amusement, Gambling, and Recreation Industries',\n  'Amusement Parks and Arcades',\n  'Gambling Industries',\n  'Other Amusement and Recreation Industries',\n  'Fitness and Recreational Sports Centers',\n  'Accommodation and Food Services',\n  'Accommodation',\n  'Traveler Accommodation',\n  'Hotels (except Casino Hotels) and Motels',\n  'Casino Hotels',\n  'Food Services and Drinking Places',\n  'Special Food Services',\n  'Drinking Places (Alcoholic Beverages)',\n  'Restaurants and Other Eating Places',\n  'Full-Service Restaurants',\n  'Limited-Service Restaurants and Other Eating Places',\n  'Other Services',\n  'Repair and Maintenance',\n  'Automotive Repair and Maintenance',\n  'Commercial and Industrial Machinery and Equipment (except Automotive and Electronic) Repair and Maintenance',\n  'Personal and Household Goods Repair and Maintenance',\n  'Personal and Laundry Services',\n  'Personal Care Services',\n  'Drycleaning and Laundry Services',\n  'Other Personal Services',\n  'Religious, Grantmaking, Civic, Professional, and Similar Organizations',\n  'Religious Organizations',\n  'Grantmaking and Giving Services',\n  'Social Advocacy Organizations',\n  'Civic and Social Organizations',\n  'Business, Professional, Labor, Political, and Similar Organizations',\n  'Government',\n  'Federal Government',\n  'National Security',\n  'Federal Government excluding Department of Defense',\n  'Federal Government excluding Postal Service',\n  'Federal Government excluding Postal Service, Department of Defense, Ship Building, and Hospitals',\n  'Federal Government Hospitals',\n  'Department of Defense',\n  'Department of Defense, including Ship Building',\n  'Department of Defense, including Ship Building and Hospitals',\n  'U.S. Postal Service',\n  'State Government',\n  'State Government Educational Services',\n  'State Government Excluding Education',\n  'State Government Hospitals',\n  'State Government excluding Educational Services and Hospitals',\n  'Local Government',\n  'Indian Tribes',\n  'Local Government Educational Services',\n  'Local Government excluding Educational Services',\n  'Transportation',\n  'Local Government Hospitals',\n  'Local Government Elementary and Secondary Education',\n  'Total State and Local Government',\n  'District of Columbia Government'\n];\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nconst Autosuggest = require('react-autosuggest');\n\nclass GeoSuggest extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      value: \"\",\n      suggestions: [],\n      selections: []\n    }\n  }\n\n  getFromServer = inputValue => {\n    const dataSet = this.props.dataset;\n    const path = `http://${ window.location.hostname }:4000/${ dataSet }/suggest?geo=${ inputValue }`;\n\n    return new Promise( (resolve, reject) => {\n      axios.get( path )\n        .then( response => {\n          resolve(response.data);\n        } )\n        .catch( err => {\n          reject(err);\n        } );\n\n    });\n  }\n\n  onClear = () => {\n    this.setState({\n      suggestions: []\n    })\n  }\n\n  onFetch = _.debounce( ({ value }) => {\n    this.getFromServer( value )\n      .then( suggestions => {\n        const flatSuggestions = suggestions.map(obj => obj.area);\n        this.setState({\n          suggestions: flatSuggestions\n        })\n      });\n  }, 500 );\n\n  renderSuggestion = ( suggestion ) => {\n    return <div>{ suggestion }</div>\n  }\n\n  renderSelections = ( selections ) => {\n    var count = 0;\n    return (\n      <div>\n      {\n        selections.map( sel => {\n          count++;\n          return <div key={count}>{ sel }</div>;\n        })\n      }\n      </div>\n    );\n  }\n\n  onKeyDown = (event) => {\n    const isEnter = event.which === 13;\n    const isBackspace = event.which === 8;\n\n    if ( isEnter ) {\n      const selection = this.state.value;\n      this.props.add({text: selection, id: selection}, 'area');\n      this.setState({value: ''});\n    }\n    if ( isBackspace ) {\n      this.props.remove('last', 'area');\n    }\n  }\n\n  onChange = (event, { newValue }) => {\n    if (event.type === 'change' ) {\n      this.setState({\n        value: newValue\n      });\n    }\n    if ( event.type === 'keydown' ) {\n      const isDown = event.which === 40;\n      const isUp = event.which === 38;\n\n      const indexOfCurrentSelection = this.state.suggestions.indexOf( this.state.value );\n\n      let valueToBe = this.state.value;\n      if ( isUp ) {\n        const isFirstIndex = indexOfCurrentSelection === 0;\n        const previousValue = this.state.suggestions[ indexOfCurrentSelection - 1 ];\n        valueToBe = isFirstIndex ? this.state.value : previousValue;\n      }\n      if ( isDown ) {\n        const isLastIndex = indexOfCurrentSelection + 1 === this.state.suggestions.length;\n        const nextValue = this.state.suggestions[ indexOfCurrentSelection + 1 ];\n        valueToBe = isLastIndex ? this.state.value : nextValue;\n      }\n\n      this.setState({\n        value: valueToBe\n      })\n    }\n  }\n\n  render() {\n    const suggestions = this.state.suggestions;\n\n    const inputProps = {\n      value: this.state.value,\n      onChange: this.onChange,\n      onKeyDown: this.onKeyDown,\n      onBlur: () => {},\n      type: 'search',\n      placeholder: 'location'\n    };\n\n    return (\n      <div>\n        { this.renderSelections( this.state.selections ) }\n        <Autosuggest\n          suggestions={ suggestions }\n          onSuggestionsFetchRequested={ this.onFetch }\n          onSuggestionsClearRequested={ this.onClear }\n          getSuggestionValue={ this.getFromServer }\n          renderSuggestion={ this.renderSuggestion }\n          inputProps={ inputProps } />\n      </div>\n    );\n  }\n}\n\nexport default GeoSuggest;\n","import React, { Component } from 'react';\nimport ReactDataGrid from 'react-data-grid';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nimport GeoSuggest from './geoSuggest';\n\nconst {\n  Toolbar,\n  Data: { Selectors }\n} = require('react-data-grid-addons');\n\nfunction buildQueryString( filters ) {\n  let query = '?';\n  _.forEach(filters, (filter, key) => {\n    var filterLabel = key;\n    var filterValue = filter.join('|');\n    const thisQuery = `${ filterLabel }=${ filterValue }&`;\n    query += thisQuery;\n  });\n  return query;\n}\n\nfunction createFilename() {\n  const now = new Date();\n  const filename = `LAUS_${ 1900 + now.getYear() }-${ now.getMonth() }-${ now.getDate() }.csv`;\n  return filename;\n}\n\nclass Grid extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this._columns = [\n      {\n        key: 'survey_name',\n        name: 'Survey Name',\n        width: 160\n      },\n      {\n        key: 'series_title',\n        name: 'Series Title',\n        width: 160\n      },\n      {\n        key: 'series_id',\n        name: 'Series ID',\n        width: 200\n      },\n      {\n        key: 'period',\n        name: 'Period',\n        width: 150\n      },\n      {\n        key: 'label',\n        name: 'Label',\n        width: 150\n      },\n      {\n        key: 'seasonality_enum',\n        name: 'Seasonality',\n        width: 100\n      },\n      {\n        key: 'area',\n        name: 'Area',\n        width: 350\n      },\n      {\n        key: 'area_type',\n        name: 'Area Type',\n        width: 160\n      },\n      {\n        key: 'measure_type',\n        name: 'Measure Type',\n        width: 160\n      },\n      {\n        key: 'value',\n        name: 'Value',\n        width: 200\n      }\n    ];\n\n    this.seasonalityEnums = [ {\n      key: 'S',\n      note: '(seasonally adjusted)'\n    }, {\n      key: 'U',\n      note: '(not adjusted)'\n    }];\n    this.areaTypes = [\n      'National',\n      'Statewide',\n      'Metropolitan areas',\n      'Metropolitan divisions',\n      'Micropolitan areas',\n      'Combined areas',\n      'Counties and equivalents',\n      'Cities and towns above 25,000 population',\n      'Cities and towns below 25,000 population in New England',\n      'Parts of cities that cross county boundaries',\n      'Multi-entity small labor market areas',\n      'Intrastate parts of interstate areas',\n      'Balance of state areas',\n      'Census regions',\n      'Census divisions'\n    ];\n    this.measureTypes = [\n      'Unemployment Rate',\n      'Unemployment',\n      'Employment',\n      'Labor Force'\n    ];\n\n    this.state = {\n      showFilters: false,\n      rows: [],\n      filters: {},\n      tags: {}\n    };\n  }\n\n  getFromServer( query, isForDownload ) {\n    let path = `http://${ window.location.hostname }:4000/laus`;\n    if ( isForDownload ) {\n      path += '/download'\n    }\n    if ( query ) {\n      path += query;\n    }\n\n    axios.get( path )\n      .then( response => {\n        if ( isForDownload ) {\n          var headers = response.headers;\n          var blob = new Blob([response.data],{type:headers['content-type']});\n          var link = document.createElement('a');\n          link.style.display = 'none';\n          link.href = window.URL.createObjectURL(blob);\n          link.download = createFilename();\n          link.click();\n          this.setState({isWaitingForDownload: false})\n        } else {\n          this._rows = response.data;\n          const lastItem = response.data[response.data.length - 1];\n          if ( lastItem && lastItem.hasMoreResults ) {\n\n          }\n          this.setState({rows: this._rows});\n        }\n      })\n      .catch( err => {\n        console.log('Resource not available.\\n', err);\n      })\n  }\n\n  componentWillMount() {\n    this.getFromServer();\n  }\n\n  requestFromAPI = ( isForDownload ) => {\n    const queryString = buildQueryString( this.state.filters );\n    this.getFromServer( queryString, isForDownload );\n  }\n\n  getSize = () => {\n    return this.getRows().length;\n  };\n\n  getRows = () => {\n    return Selectors.getRows(this.state);\n  };\n\n  rowGetter = (rowIdx) => {\n    let rows = this.getRows();\n    return rows[rowIdx];\n  };\n\n  onClearFilters = () => {\n    // all filters removed\n    this.setState({\n      filters: {},\n      tags: {}\n    }, this.requestFromAPI);\n  };\n\n  download = () => {\n    this.setState({isWaitingForDownload:true});\n    this.requestFromAPI( true );\n  };\n\n  pleaseHold = () => {\n    alert('Still in development! Come back in a few days?')\n  };\n\n  handleClick = e => {\n    // return;\n    const isInside = e.target.offsetParent && e.target.offsetParent.className === 'filter-pane'\n    if ( isInside ) {\n      return;\n    }\n    this.closeFilters();\n  };\n\n  closeFilters = () => {\n    document.removeEventListener('mousedown', this.handleClick, false);\n    this.setState({\n      showFilters: false\n    })\n  };\n\n  openFilters = () => {\n    document.addEventListener('mousedown', this.handleClick, false);\n    this.setState({\n      showFilters: true\n    });\n  };\n\n  findKey = ( value ) => {\n    let key = \"\";\n\n    const isMeasureType = this.measureTypes.find( type => type === value );\n    const isSeasonalityType = this.seasonalityEnums.find( type => type.key === value );\n    const isAreaType = this.areaTypes.find( type => type === value );\n    if ( isMeasureType ) {\n      key = \"measure_type\";\n    } else if ( isSeasonalityType ) {\n      key = \"seasonality_enum\";\n    } else if ( isAreaType ) {\n      key = \"area_type\"\n    }\n    return key;\n  }\n\n  handleChange = event => {\n    const { filters } = this.state;\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    if ( target.type === \"checkbox\" ) {\n      const key = this.findKey( name );\n\n      if ( value ) {\n        // being checked\n        filters[ key ] = _.uniq( ( filters[ key ] || [] ).concat( name ) );\n      } else {\n        // being unchecked\n        filters[ key ] = _.uniq( filters[ key ].filter( index => index !== name ) );\n        if ( filters[ key ].length === 0 ) {\n          // to disable the download button.\n          delete filters[ key ];\n        }\n      }\n    }\n\n    this.setState({\n      filters: filters\n    });\n  }\n\n  handleTagDelete = (i, key) => {\n    if ( !this.state.tags.area || this.state.tags.area.length === 0 ) {\n      return;\n    }\n\n    if ( i === 'last' && key === 'area' ) {\n      i = this.state.tags.area.length - 1;\n    }\n    const { filters, tags } = this.state;\n    if ( !filters[ key ] ) {\n      return;\n    }\n    filters[ key ] = filters[key].filter((tag, index) => index !== i);\n    if ( filters[ key ].length === 0 ) {\n      // to disable the download button.\n      delete filters[ key ];\n    }\n    tags[ key ] = tags[key].filter((tag, index) => index !== i);\n    this.setState({\n      filters: filters,\n      tags: tags\n    });\n  };\n\n  handleTagAdd = (tag, category) => {\n    const { filters, tags } = this.state;\n    filters[ category ] = ( filters[ category ] || [] ).concat( tag.text );\n    tags[ category ] = ( tags[ category ] || [] ).concat( tag );\n    this.setState({\n      filters: filters,\n      tags: tags\n    });\n  };\n\n  DownloadButton = () => {\n    if ( _.isEmpty( this.state.filters ) ) {\n      return (\n        <button disabled>\n          Select some stuff below and then you can download.\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={ this.download }>\n          Download current view.\n        </button>\n      );\n    }\n  }\n\n  isChecked = (key, name) => {\n    return this.state.filters[key] &&\n      this.state.filters[key].includes(name);\n  }\n\n  makeCheckboxes = (key, names) => {\n    const rows = [];\n    let count = 0;\n    names.forEach( value => {\n      let name = '';\n      let supplemental = '';\n\n      if ( typeof value == 'object' ) {\n        name = value.key;\n        supplemental = value.note;\n      } else {\n        name = value;\n      }\n\n      rows.push(<div key={ count }>\n          <label>\n          <input\n            name={ name }\n            type=\"checkbox\"\n            checked={this.isChecked( key, name )}\n            onChange={this.handleChange} />\n            &nbsp;{ name } { supplemental }\n        </label>\n      </div>);\n      count++\n    } );\n\n    return <div>{ rows }</div>\n  }\n\n  FilterForm = () => {\n    const KeyCodes = {\n      comma: 188, // some of the values include commas. therefore, exclude\n      enter: 13,\n      tab: 9\n    };\n\n    const delimiters = [KeyCodes.tab, KeyCodes.enter];\n\n    return (\n      <div className=\"filter-pane\">\n        { !_.isEmpty( this.state.filters ) ?\n            <div>\n              Meets criteria:\n              <ul>\n                {\n                  Object.keys( this.state.filters ).map( (filterName, i) => {\n                    const isLastItem = i + 1 === _.size( this.state.filters );\n                    const filter = this.state.filters[ filterName ];\n                    let string = filter.join(' OR ');\n                    if ( !isLastItem ) {\n                      string += ' AND'\n                    }\n                    return (\n                      <li key={ i }>{ string }</li>\n                    )\n                  })\n                }\n              </ul>\n              <div>\n                <button\n                  style={{\n                    width: '100%',\n                    backgroundColor: 'green',\n                    color: 'white',\n                    fontWeight: '800'\n                  }}\n                  onClick={ () => this.requestFromAPI( false )}>\n                  Preview Results\n                </button>\n              </div>\n              <button\n                onClick={this.onClearFilters}>\n                Clear Filters\n              </button>\n\n              <this.DownloadButton />\n              {\n                this.state.isWaitingForDownload ?\n                  <span style={{color: 'green'}}>&nbsp;Waiting for download...</span> :\n                  null\n              }\n            </div>\n            :\n            null\n        }\n        <form>\n          <div className=\"disclaimer\">\n            At the moment, text values inserted here must match upper/lowercase and punctuation of the target search field.\n          </div>\n          <section>\n            <label\n              className=\"hide-input\">\n              <b>Area</b>\n              <div>\n                <ReactTags\n                  tags={this.state.tags.area}\n                  handleDelete={() => {}}\n                  handleAddition={() => {}}\n                  delimiters={delimiters} />\n                <GeoSuggest\n                  dataset=\"laus\"\n                  add={ this.handleTagAdd }\n                  remove={ this.handleTagDelete }/>\n              </div>\n            </label>\n          </section>\n          <section>\n            <label>\n              <b>Period</b>\n              <div>\n                <ReactTags\n                  tags={this.state.tags.period}\n                  handleDelete={e => this.handleTagDelete(e, 'period')}\n                  handleAddition={e => this.handleTagAdd(e, 'period')}\n                  delimiters={delimiters} />\n              </div>\n            </label>\n          </section>\n          <section>\n            <label>\n              <b>Label</b>\n              <div>\n                <ReactTags\n                  tags={this.state.tags.label}\n                  handleDelete={e => this.handleTagDelete(e, 'label')}\n                  handleAddition={e => this.handleTagAdd(e, 'label')}\n                  delimiters={delimiters} />\n              </div>\n            </label>\n          </section>\n          <section>\n            <b>Area Types</b>\n            { this.makeCheckboxes( 'area_type', this.areaTypes ) }\n          </section>\n          <section>\n            <b>Measure Types</b>\n            { this.makeCheckboxes( 'measure_type', this.measureTypes ) }\n          </section>\n          <section>\n            <b>Seasonality</b>\n            { this.makeCheckboxes( 'seasonality_enum', this.seasonalityEnums ) }\n          </section>\n        </form>\n      </div>\n    );\n  }\n\n  render() {\n    if ( this._rows ) {\n      return  (\n        <div>\n          <div className=\"filter-trigger\">\n            <button\n              onClick={this.openFilters}>\n              Apply Filters\n            </button>\n            {\n              this.state.showFilters && <this.FilterForm />\n            }\n          </div>\n\n          <div style={{\n            position: 'absolute',\n            left: '0',\n            width: '100%'\n            }}>\n            <ReactDataGrid\n              columns={this._columns}\n              rowGetter={this.rowGetter}\n              rowsCount={this.getSize()}\n              minHeight={600}\n              minColumnWidth={120}\n              toolbar={<Toolbar />}\n              />\n            <div className=\"disclaimer\">\n              Data above is only the first 100 rows. If you choose to download your current filter, it will provide the full dataset as stored in the database.\n            </div>\n\n          </div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Grid;\n","import React, { Component } from 'react';\nimport ReactDataGrid from 'react-data-grid';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nimport GeoSuggest from './geoSuggest';\nimport industries from './industries';\n\nconst {\n  Toolbar,\n  Data: { Selectors }\n} = require('react-data-grid-addons');\n\nfunction buildQueryString( filters ) {\n  let query = '?';\n  _.forEach(filters, (filter, key) => {\n    var filterLabel = key;\n    var filterValue = filter.join('|');\n    const thisQuery = `${ filterLabel }=${ filterValue }&`;\n    query += thisQuery;\n  });\n  return query;\n}\n\nfunction createFilename() {\n  const now = new Date();\n  const filename = `EMPLOYMENT_${ 1900 + now.getYear() }-${ now.getMonth() }-${ now.getDate() }.csv`;\n  return filename;\n}\n\nclass Grid extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this._columns = [\n      {\n        key: 'survey_name',\n        name: 'Survey Name',\n        width: 160,\n        resizable: true\n      },\n      {\n        key: 'series_title',\n        name: 'Series Title',\n        width: 160\n      },\n      {\n        key: 'series_id',\n        name: 'Series ID',\n        width: 200\n      },\n      {\n        key: 'period',\n        name: 'Period',\n        width: 150\n      },\n      {\n        key: 'label',\n        name: 'Label',\n        width: 150\n      },\n      {\n        key: 'seasonality_enum',\n        name: 'Seasonality',\n        width: 100\n      },\n      {\n        key: 'state',\n        name: 'State',\n        width: 160\n      },\n      {\n        key: 'area_type',\n        name: 'Area Type',\n        width: 350\n      },\n      {\n        key: 'employment_type',\n        name: 'Employment Type',\n        width: 160\n      },\n      {\n        key: 'supersector',\n        name: 'Supersector',\n        width: 160\n      },\n      {\n        key: 'industry',\n        name: 'Industry',\n        width: 160\n      },\n      {\n        key: 'value',\n        name: 'Value',\n        width: 200\n      }\n    ];\n\n    this.seasonalityEnums = [ {\n      key: 'S',\n      note: '(seasonally adjusted)'\n    }, {\n      key: 'U',\n      note: '(not adjusted)'\n    }];\n    this.supersectors = [\n      'Total Nonfarm',\n      'Total Private',\n      'Goods Producing',\n      'Service-Providing',\n      'Private Service Providing',\n      'Mining and Logging',\n      'Mining, Logging, and Construction',\n      'Construction',\n      'Manufacturing',\n      'Durable Goods',\n      'Non-Durable Goods',\n      'Trade, Transportation, and Utilities',\n      'Wholesale Trade',\n      'Retail Trade',\n      'Transportation and Utilities',\n      'Information',\n      'Financial Activities',\n      'Professional and Business Services',\n      'Education and Health Services',\n      'Leisure and Hospitality',\n      'Other Services',\n      'Government'    ];\n    this.industries = industries;\n\n    this.state = {\n      showFilters: false,\n      rows: [],\n      filters: {},\n      tags: {}\n    };\n  }\n\n  getFromServer( query, isForDownload ) {\n    let path = `http://${ window.location.hostname }:4000/employ`;\n    if ( isForDownload ) {\n      path += '/download'\n    }\n    if ( query ) {\n      path += query;\n    }\n    console.log('path', path);\n    axios.get( path )\n      .then( response => {\n        if ( isForDownload ) {\n          var headers = response.headers;\n          var blob = new Blob([response.data],{type:headers['content-type']});\n          var link = document.createElement('a');\n          link.style.display = 'none';\n          link.href = window.URL.createObjectURL(blob);\n          link.download = createFilename();\n          link.click();\n          this.setState({isWaitingForDownload: false})\n        } else {\n          this._rows = response.data;\n          const lastItem = response.data[response.data.length - 1];\n          if ( lastItem && lastItem.hasMoreResults ) {\n\n          }\n          this.setState({rows: this._rows});\n        }\n      })\n      .catch( err => {\n        console.log('Resource not available.\\n', err);\n      })\n  }\n\n  componentWillMount() {\n    this.getFromServer();\n  }\n\n  requestFromAPI = ( isForDownload ) => {\n    const queryString = buildQueryString( this.state.filters );\n    this.getFromServer( queryString, isForDownload );\n  }\n\n  getSize = () => {\n    return this.getRows().length;\n  };\n\n  getRows = () => {\n    return Selectors.getRows(this.state);\n  };\n\n  rowGetter = (rowIdx) => {\n    let rows = this.getRows();\n    return rows[rowIdx];\n  };\n\n  onClearFilters = () => {\n    // all filters removed\n    this.setState({\n      filters: {},\n      tags: {}\n    }, this.requestFromAPI);\n  };\n\n  download = () => {\n    this.setState({isWaitingForDownload:true});\n    this.requestFromAPI( true );\n  };\n\n  pleaseHold = () => {\n    alert('Still in development! Come back in a few days?')\n  };\n\n  handleClick = e => {\n    // return;\n    const isInside = e.target.offsetParent && e.target.offsetParent.className === 'filter-pane'\n    if ( isInside ) {\n      return;\n    }\n    this.closeFilters();\n  };\n\n  closeFilters = () => {\n    document.removeEventListener('mousedown', this.handleClick, false);\n    this.setState({\n      showFilters: false\n    })\n  };\n\n  openFilters = () => {\n    document.addEventListener('mousedown', this.handleClick, false);\n    this.setState({\n      showFilters: true\n    });\n  };\n\n  findKey = ( value ) => {\n    let key = \"\";\n\n    const isSupersector = this.supersectors.find( type => type === value );\n    const isSeasonalityType = this.seasonalityEnums.find( type => type.key === value );\n    const isIndustry = this.industries.find( type => type === value );\n    if ( isSupersector ) {\n      key = \"supersector_type\";\n    } else if ( isSeasonalityType ) {\n      key = \"seasonality_enum\";\n    } else if ( isIndustry ) {\n      key = \"industry_type\"\n    }\n    return key;\n  }\n\n  handleChange = event => {\n    const { filters } = this.state;\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    if ( target.type === \"checkbox\" ) {\n      const key = this.findKey( name );\n\n      if ( value ) {\n        // being checked\n        filters[ key ] = _.uniq( ( filters[ key ] || [] ).concat( name ) );\n      } else {\n        // being unchecked\n        filters[ key ] = _.uniq( filters[ key ].filter( index => index !== name ) );\n        if ( filters[ key ].length === 0 ) {\n          // to disable the download button.\n          delete filters[ key ];\n        }\n      }\n    }\n\n    this.setState({\n      filters: filters\n    });\n  }\n\n  handleTagDelete = (i, key) => {\n    if ( i === 'last' && key === 'area' ) {\n      i = this.state.tags.area && this.state.tags.area.length - 1;\n      if ( !i ) {\n        return;\n      }\n    }\n    const { filters, tags } = this.state;\n    if ( !filters[ key ] ) {\n      return;\n    }\n    filters[ key ] = filters[key].filter((tag, index) => index !== i);\n    if ( filters[ key ].length === 0 ) {\n      // to disable the download button.\n      delete filters[ key ];\n    }\n    tags[ key ] = tags[key].filter((tag, index) => index !== i);\n    this.setState({\n      filters: filters,\n      tags: tags\n    });\n  };\n\n  handleTagAdd = (tag, category) => {\n    const { filters, tags } = this.state;\n    filters[ category ] = ( filters[ category ] || [] ).concat( tag.text );\n    tags[ category ] = ( tags[ category ] || [] ).concat( tag );\n    this.setState({\n      filters: filters,\n      tags: tags\n    });\n  };\n\n  DownloadButton = () => {\n    if (this._rows && this._rows.length === 0) {\n      return (\n        <button disabled>\n          Unable to download current view.\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={ this.download }>\n          Download current view.\n        </button>\n      );\n    }\n  }\n\n  isChecked = (key, name) => {\n    return this.state.filters[key] &&\n      this.state.filters[key].includes(name);\n  }\n\n  makeCheckboxes = (key, names) => {\n    const rows = [];\n    let count = 0;\n    names.forEach( value => {\n      let name = '';\n      let supplemental = '';\n\n      if ( typeof value == 'object' ) {\n        name = value.key;\n        supplemental = value.note;\n      } else {\n        name = value;\n      }\n\n      rows.push(<div key={ count }>\n          <label>\n          <input\n            name={ name }\n            type=\"checkbox\"\n            checked={this.isChecked( key, name )}\n            onChange={this.handleChange} />\n            &nbsp;{ name } { supplemental }\n        </label>\n      </div>);\n      count++\n    } );\n\n    return <div>{ rows }</div>\n  }\n\n  FilterForm = () => {\n    const KeyCodes = {\n      comma: 188, // some of the values include commas. therefore, exclude\n      enter: 13,\n      tab: 9\n    };\n\n    const delimiters = [KeyCodes.tab, KeyCodes.enter];\n\n    return (\n      <div className=\"filter-pane\">\n        { !_.isEmpty( this.state.filters ) ?\n            <div>\n              Meets criteria:\n              <ul>\n                {\n                  Object.keys( this.state.filters ).map( (filterName, i) => {\n                    const isLastItem = i + 1 === _.size( this.state.filters );\n                    const filter = this.state.filters[ filterName ];\n                    let string = filter.join(' OR ');\n                    if ( !isLastItem ) {\n                      string += ' AND'\n                    }\n                    return (\n                      <li key={ i }>{ string }</li>\n                    )\n                  })\n                }\n              </ul>\n              <div>\n                <button\n                  style={{\n                    width: '100%',\n                    backgroundColor: 'green',\n                    color: 'white',\n                    fontWeight: '800'\n                  }}\n                  onClick={ () => this.requestFromAPI( false )}>\n                  Preview Results\n                </button>\n              </div>\n              <div>\n                <button\n                  onClick={this.onClearFilters}>\n                  Clear Filters\n                </button>\n\n                <this.DownloadButton />\n              </div>\n              {\n                this.state.isWaitingForDownload ?\n                  <span style={{color: 'green'}}>&nbsp;Waiting for download...</span> :\n                  null\n              }\n            </div>\n            :\n            null\n        }\n        <form>\n          <div className=\"disclaimer\">\n            At the moment, text values inserted here must match upper/lowercase and punctuation of the target search field.\n          </div>\n          <section>\n            <label>\n              <b>State</b>\n              <div>\n                <ReactTags\n                  tags={this.state.tags.state}\n                  handleDelete={e => this.handleTagDelete(e, 'state')}\n                  handleAddition={e => this.handleTagAdd(e, 'state')}\n                  delimiters={delimiters} />\n              </div>\n            </label>\n          </section>\n          <section>\n            <label>\n              <b>Period</b>\n              <div>\n                <ReactTags\n                  tags={this.state.tags.period}\n                  handleDelete={e => this.handleTagDelete(e, 'period')}\n                  handleAddition={e => this.handleTagAdd(e, 'period')}\n                  delimiters={delimiters} />\n              </div>\n            </label>\n          </section>\n          <section>\n            <label>\n              <b>Label</b>\n              <div>\n                <ReactTags\n                  tags={this.state.tags.label}\n                  handleDelete={e => this.handleTagDelete(e, 'label')}\n                  handleAddition={e => this.handleTagAdd(e, 'label')}\n                  delimiters={delimiters} />\n              </div>\n            </label>\n          </section>\n          <section>\n            <b>Seasonality</b>\n            { this.makeCheckboxes( 'seasonality_enum', this.seasonalityEnums ) }\n          </section>\n          <section>\n            <b>Supersectors</b>\n            { this.makeCheckboxes( 'supersector', this.supersectors ) }\n          </section>\n          <section>\n            <b>Industries</b>\n            { this.makeCheckboxes( 'industry', this.industries ) }\n          </section>\n        </form>\n      </div>\n    );\n  }\n\n  render() {\n    if ( this._rows ) {\n      return  (\n        <div>\n          <div className=\"filter-trigger\">\n            <button\n              onClick={this.openFilters}>\n              Apply Filters\n            </button>\n            {\n              this.state.showFilters && <this.FilterForm />\n            }\n          </div>\n\n          <div style={{\n            position: 'absolute',\n            left: '0',\n            width: '100%'\n            }}>\n            <ReactDataGrid\n              columns={this._columns}\n              rowGetter={this.rowGetter}\n              rowsCount={this.getSize()}\n              minHeight={600}\n              minColumnWidth={120}\n              toolbar={<Toolbar />}\n              />\n            <div className=\"disclaimer\">\n              Data above is only the first 100 rows. If you choose to download your current filter, it will provide the full dataset as stored in the database.\n            </div>\n\n          </div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Grid;\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport LaborGrid from \"./components/laborStatistics\";\nimport UnemploymentGrid from \"./components/unemployment\";\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = {\n      grid: 'unemployment'\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.showGrid = this.showGrid.bind(this);\n  }\n\n  handleClick( prompt ) {\n    this.setState({\n      grid: prompt\n    })\n  }\n\n  showGrid() {\n    if ( this.state.grid === 'labor' ) {\n      return <LaborGrid />\n    } else if ( this.state.grid === 'unemployment' ) {\n      return <UnemploymentGrid />\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={() => this.handleClick('labor')}>\n          National and Local Labor Force Statistics\n        </button>\n        <button onClick={() => this.handleClick('unemployment')}>\n          Current Employment\n        </button>\n        { this.showGrid() }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}